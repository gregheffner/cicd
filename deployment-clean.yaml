apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    labels:
      controller-revision-hash: 67644c75d5
      name: cleaner-pod
      pod-template-generation: "1"
    name: cleaner-pod-7ntnv
    namespace: default
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker3
    containers:
    - command:
      - /bin/sh
      - -c
      - |
        while true; do
          now=$(date +%d)
          if [ "$now" = "01" ]; then
            rm -f /host/var/log/nginx/access.log /host/var/log/nginx/error.log
            sleep 86400
          else
            sleep 3600
          fi
        done
      image: busybox
      name: cleanup-pod
      volumeMounts:
      - mountPath: /host/var/log/nginx
        name: host-logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ct97j
        readOnly: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    serviceAccountName: default
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/log/nginx
        type: Directory
      name: host-logs
    - name: kube-api-access-ct97j
      projected:
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    labels:
      controller-revision-hash: 67644c75d5
      name: cleaner-pod
      pod-template-generation: "1"
    name: cleaner-pod-npgsl
    namespace: default
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker2
    containers:
    - command:
      - /bin/sh
      - -c
      - |
        while true; do
          now=$(date +%d)
          if [ "$now" = "01" ]; then
            rm -f /host/var/log/nginx/access.log /host/var/log/nginx/error.log
            sleep 86400
          else
            sleep 3600
          fi
        done
      image: busybox
      name: cleanup-pod
      volumeMounts:
      - mountPath: /host/var/log/nginx
        name: host-logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ffjcj
        readOnly: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    serviceAccountName: default
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/log/nginx
        type: Directory
      name: host-logs
    - name: kube-api-access-ffjcj
      projected:
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    labels:
      controller-revision-hash: 67644c75d5
      name: cleaner-pod
      pod-template-generation: "1"
    name: cleaner-pod-nt8nf
    namespace: default
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker1
    containers:
    - command:
      - /bin/sh
      - -c
      - |
        while true; do
          now=$(date +%d)
          if [ "$now" = "01" ]; then
            rm -f /host/var/log/nginx/access.log /host/var/log/nginx/error.log
            sleep 86400
          else
            sleep 3600
          fi
        done
      image: busybox
      name: cleanup-pod
      volumeMounts:
      - mountPath: /host/var/log/nginx
        name: host-logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cj4wz
        readOnly: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    serviceAccountName: default
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/log/nginx
        type: Directory
      name: host-logs
    - name: kube-api-access-cj4wz
      projected:
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/default-custom-config: dd51953a8d3959ab0339bd9777452024
      checksum/otel_agent-custom-config: c609e2fb7352676a67f0423b58970d43
      container.apparmor.security.beta.kubernetes.io/system-probe: unconfined
    labels:
      agent.datadoghq.com/component: agent
      agent.datadoghq.com/name: datadog
      agent.datadoghq.com/provider: ""
      app.kubernetes.io/component: agent
      app.kubernetes.io/instance: datadog-agent
      app.kubernetes.io/managed-by: datadog-operator
      app.kubernetes.io/name: datadog-agent-deployment
      app.kubernetes.io/part-of: default-datadog
      app.kubernetes.io/version: ""
      controller-revision-hash: 5749fbf44
      pod-template-generation: "25"
    name: datadog-agent-5rqhq
    namespace: default
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker2
    containers:
    - command:
      - agent
      - run
      env:
      - name: DD_HEALTH_PORT
        value: "5555"
      - name: DD_CONTAINER_IMAGE_ENABLED
        value: "true"
      - name: KUBERNETES
        value: "yes"
      - name: DD_CLUSTER_AGENT_ENABLED
        value: "true"
      - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
        value: datadog-cluster-agent
      - name: DD_CLUSTER_AGENT_TOKEN_NAME
        value: datadog-token
      - name: DD_KUBERNETES_KUBELET_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      - name: DD_CLUSTER_NAME
        value: heffner.k8s
      - name: DD_SITE
        value: us5.datadoghq.com
      - name: DD_LOG_LEVEL
        value: info
      - name: DD_TAGS
        value: '["env:prod"]'
      - name: DD_LANGUAGE_DETECTION_ENABLED
        value: "true"
      - name: DD_PROCESS_CONFIG_RUN_IN_CORE_AGENT_ENABLED
        value: "true"
      - name: DD_EXTRA_CONFIG_PROVIDERS
        value: clusterchecks endpointschecks
      - name: DD_RUNTIME_SECURITY_CONFIG_ENABLED
        value: "true"
      - name: DD_RUNTIME_SECURITY_CONFIG_SOCKET
        value: /var/run/sysprobe/runtime-security.sock
      - name: DD_CLUSTER_AGENT_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: token
            name: datadog-token
      - name: DD_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: datadog-secret
      - name: DD_DOGSTATSD_SOCKET
        value: /var/run/datadog/dsd.socket
      - name: DD_IGNORE_AUTOCONF
        value: kubernetes_state
      - name: DD_PROCESS_CONFIG_CONTAINER_COLLECTION_ENABLED
        value: "true"
      - name: DD_LOGS_ENABLED
        value: "true"
      - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
        value: "true"
      - name: DD_LOGS_CONFIG_K8S_CONTAINER_USE_FILE
        value: "true"
      - name: DD_SYSTEM_PROBE_NETWORK_ENABLED
        value: "true"
      - name: DD_SYSTEM_PROBE_ENABLED
        value: "true"
      - name: DD_SYSPROBE_SOCKET
        value: /var/run/sysprobe/sysprobe.sock
      - name: DD_COLLECT_DNS_STATS
        value: "true"
      - name: DD_SYSTEM_PROBE_CONFIG_ENABLE_CONNTRACK
        value: "true"
      - name: DD_ORCHESTRATOR_EXPLORER_ENABLED
        value: "true"
      - name: DD_ORCHESTRATOR_EXPLORER_CONTAINER_SCRUBBING_ENABLED
        value: "true"
      - name: DD_AGENT_IPC_PORT
        value: "5009"
      - name: DD_AGENT_IPC_CONFIG_REFRESH_INTERVAL
        value: "60"
      - name: DD_OTELCOLLECTOR_ENABLED
        value: "true"
      - name: DD_PROCESS_CONFIG_PROCESS_DISCOVERY_ENABLED
        value: "true"
      - name: DD_REMOTE_CONFIGURATION_ENABLED
        value: "true"
      - name: DD_SYSTEM_PROBE_SERVICE_MONITORING_ENABLED
        value: "true"
      - name: DD_PROCESS_CONFIG_PROCESS_COLLECTION_ENABLED
        value: "true"
      - name: DD_PROCESS_AGENT_ENABLED
        value: "true"
      - name: DD_KUBELET_TLS_VERIFY
        value: "false"
      - name: DD_CONTAINER_INCLUDE
        value: name:heffner.live
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /live
          port: 5555
        initialDelaySeconds: 15
        periodSeconds: 15
        timeoutSeconds: 5
      name: agent
      ports:
      - containerPort: 8125
        name: dogstatsdport
        protocol: UDP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /ready
          port: 5555
        initialDelaySeconds: 15
        periodSeconds: 15
        timeoutSeconds: 5
      startupProbe:
        failureThreshold: 6
        httpGet:
          path: /startup
          port: 5555
        initialDelaySeconds: 15
        periodSeconds: 15
        timeoutSeconds: 5
      volumeMounts:
      - mountPath: /var/log/datadog
        name: logdatadog
      - mountPath: /etc/datadog-agent/auth
        name: datadog-agent-auth
      - mountPath: /etc/datadog-agent/install_info
        name: installinfo
        readOnly: true
        subPath: install_info
      - mountPath: /etc/datadog-agent
        name: config
      - mountPath: /host/proc
        name: procdir
        readOnly: true
      - mountPath: /host/sys/fs/cgroup
        name: cgroups
        readOnly: true
      - mountPath: /var/run/datadog
        name: dsdsocket
      - mountPath: /host/var/run
        name: runtimesocketdir
        readOnly: true
      - mountPath: /var/run/sysprobe
        name: sysprobe-socket-dir
        readOnly: true
      - mountPath: /opt/datadog-agent/run
        name: pointerdir
      - mountPath: /var/log/pods
        name: logpodpath
        readOnly: true
      - mountPath: /var/lib/docker/containers
        name: logcontainerpath
        readOnly: true
      - mountPath: /var/log/containers
        name: symlinkcontainerpath
        readOnly: true
      - mountPath: /etc/passwd
        name: passwd
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ghf88
        readOnly: true
    - command:
      - trace-agent
      - --config=/etc/datadog-agent/datadog.yaml
      env:
      - name: DD_INSTRUMENTATION_INSTALL_ID
        value: f656f4f7-9673-410d-a246-6ce3cd25a64f
      - name: DD_INSTRUMENTATION_INSTALL_TIME
        value: "1747942833"
      - name: DD_INSTRUMENTATION_INSTALL_TYPE
        value: k8s_manual
      - name: KUBERNETES
        value: "yes"
      - name: DD_CLUSTER_AGENT_ENABLED
        value: "true"
      - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
        value: datadog-cluster-agent
      - name: DD_CLUSTER_AGENT_TOKEN_NAME
        value: datadog-token
      - name: DD_KUBERNETES_KUBELET_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      - name: DD_CLUSTER_NAME
        value: heffner.k8s
      - name: DD_SITE
        value: us5.datadoghq.com
      - name: DD_LOG_LEVEL
        value: info
      - name: DD_TAGS
        value: '["env:prod"]'
      - name: DD_APM_ENABLED
        value: "true"
      - name: DD_APM_RECEIVER_SOCKET
        value: /var/run/datadog/apm.socket
      - name: DD_CLUSTER_AGENT_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: token
            name: datadog-token
      - name: DD_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: datadog-secret
      - name: DD_DOGSTATSD_SOCKET
        value: /var/run/datadog/dsd.socket
      - name: DD_REMOTE_CONFIGURATION_ENABLED
        value: "true"
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      livenessProbe:
        initialDelaySeconds: 15
        periodSeconds: 15
        tcpSocket:
          port: 8126
        timeoutSeconds: 5
      name: trace-agent
      ports:
      - containerPort: 8126
        name: traceport
      volumeMounts:
      - mountPath: /var/log/datadog
        name: logdatadog
      - mountPath: /host/proc
        name: procdir
        readOnly: true
      - mountPath: /host/sys/fs/cgroup
        name: cgroups
        readOnly: true
      - mountPath: /etc/datadog-agent/auth
        name: datadog-agent-auth
        readOnly: true
      - mountPath: /etc/datadog-agent
        name: config
      - mountPath: /var/run/datadog
        name: apmsocket
      - mountPath: /host/var/run
        name: runtimesocketdir
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ghf88
        readOnly: true
    - command:
      - security-agent
      - start
      - -c=/etc/datadog-agent/datadog.yaml
      env:
      - name: HOST_ROOT
        value: /host/root
      - name: KUBERNETES
        value: "yes"
      - name: DD_CLUSTER_AGENT_ENABLED
        value: "true"
      - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
        value: datadog-cluster-agent
      - name: DD_CLUSTER_AGENT_TOKEN_NAME
        value: datadog-token
      - name: DD_KUBERNETES_KUBELET_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      - name: DD_CLUSTER_NAME
        value: heffner.k8s
      - name: DD_SITE
        value: us5.datadoghq.com
      - name: DD_LOG_LEVEL
        value: info
      - name: DD_TAGS
        value: '["env:prod"]'
      - name: DD_RUNTIME_SECURITY_CONFIG_ENABLED
        value: "true"
      - name: DD_RUNTIME_SECURITY_CONFIG_SOCKET
        value: /var/run/sysprobe/runtime-security.sock
      - name: DD_CLUSTER_AGENT_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: token
            name: datadog-token
      - name: DD_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: datadog-secret
      - name: DD_DOGSTATSD_SOCKET
        value: /var/run/datadog/dsd.socket
      - name: DD_REMOTE_CONFIGURATION_ENABLED
        value: "true"
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      name: security-agent
      volumeMounts:
      - mountPath: /var/log/datadog
        name: logdatadog
      - mountPath: /etc/datadog-agent/auth
        name: datadog-agent-auth
        readOnly: true
      - mountPath: /etc/datadog-agent
        name: config
      - mountPath: /var/run/datadog
        name: dsdsocket
      - mountPath: /host/var/run
        name: runtimesocketdir
        readOnly: true
      - mountPath: /var/run/sysprobe
        name: sysprobe-socket-dir
        readOnly: true
      - mountPath: /host/root
        name: hostroot
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ghf88
        readOnly: true
    - command:
      - system-probe
      - --config=/etc/datadog-agent/system-probe.yaml
      env:
      - name: KUBERNETES
        value: "yes"
      - name: DD_CLUSTER_AGENT_ENABLED
        value: "true"
      - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
        value: datadog-cluster-agent
      - name: DD_CLUSTER_AGENT_TOKEN_NAME
        value: datadog-token
      - name: DD_KUBERNETES_KUBELET_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      - name: DD_CLUSTER_NAME
        value: heffner.k8s
      - name: DD_SITE
        value: us5.datadoghq.com
      - name: DD_LOG_LEVEL
        value: info
      - name: DD_TAGS
        value: '["env:prod"]'
      - name: DD_RUNTIME_SECURITY_CONFIG_ENABLED
        value: "true"
      - name: DD_RUNTIME_SECURITY_CONFIG_SOCKET
        value: /var/run/sysprobe/runtime-security.sock
      - name: DD_RUNTIME_SECURITY_CONFIG_NETWORK_ENABLED
        value: "true"
      - name: DD_RUNTIME_SECURITY_CONFIG_ACTIVITY_DUMP_ENABLED
        value: "true"
      - name: DD_RUNTIME_SECURITY_CONFIG_REMOTE_CONFIGURATION_ENABLED
        value: "true"
      - name: DD_RUNTIME_SECURITY_CONFIG_POLICIES_DIR
        value: /etc/datadog-agent/runtime-security.d
      - name: DD_CLUSTER_AGENT_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: token
            name: datadog-token
      - name: DD_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: datadog-secret
      - name: DD_DOGSTATSD_SOCKET
        value: /var/run/datadog/dsd.socket
      - name: DD_SYSTEM_PROBE_NETWORK_ENABLED
        value: "true"
      - name: DD_SYSTEM_PROBE_ENABLED
        value: "true"
      - name: DD_SYSPROBE_SOCKET
        value: /var/run/sysprobe/sysprobe.sock
      - name: DD_COLLECT_DNS_STATS
        value: "true"
      - name: DD_SYSTEM_PROBE_CONFIG_ENABLE_CONNTRACK
        value: "true"
      - name: DD_REMOTE_CONFIGURATION_ENABLED
        value: "true"
      - name: DD_SYSTEM_PROBE_SERVICE_MONITORING_ENABLED
        value: "true"
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      name: system-probe
      securityContext:
        appArmorProfile:
          type: Unconfined
        capabilities:
          add:
          - CHOWN
          - DAC_READ_SEARCH
          - IPC_LOCK
          - NET_ADMIN
          - NET_BROADCAST
          - NET_RAW
          - SYS_ADMIN
          - SYS_PTRACE
          - SYS_RESOURCE
        seccompProfile:
          localhostProfile: system-probe
          type: Localhost
      volumeMounts:
      - mountPath: /var/log/datadog
        name: logdatadog
      - mountPath: /etc/datadog-agent/auth
        name: datadog-agent-auth
        readOnly: true
      - mountPath: /etc/datadog-agent
        name: config
      - mountPath: /sys/kernel/debug
        name: debugfs
      - mountPath: /sys/kernel/tracing
        name: tracefs
      - mountPath: /host/sys/kernel/security
        name: securityfs
        readOnly: true
      - mountPath: /var/run/sysprobe
        name: sysprobe-socket-dir
      - mountPath: /host/proc
        name: procdir
        readOnly: true
      - mountPath: /etc/passwd
        name: passwd
        readOnly: true
      - mountPath: /etc/group
        name: group
        readOnly: true
      - mountPath: /host/etc/os-release
        name: host-osrelease
        readOnly: true
      - mountPath: /host/sys/fs/cgroup
        name: cgroups
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ghf88
        readOnly: true
    - command:
      - process-agent
      - --config=/etc/datadog-agent/datadog.yaml
      - --sysprobe-config=/etc/datadog-agent/system-probe.yaml
      env:
      - name: KUBERNETES
        value: "yes"
      - name: DD_CLUSTER_AGENT_ENABLED
        value: "true"
      - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
        value: datadog-cluster-agent
      - name: DD_CLUSTER_AGENT_TOKEN_NAME
        value: datadog-token
      - name: DD_KUBERNETES_KUBELET_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      - name: DD_CLUSTER_NAME
        value: heffner.k8s
      - name: DD_SITE
        value: us5.datadoghq.com
      - name: DD_LOG_LEVEL
        value: info
      - name: DD_TAGS
        value: '["env:prod"]'
      - name: DD_LANGUAGE_DETECTION_ENABLED
        value: "true"
      - name: DD_PROCESS_CONFIG_RUN_IN_CORE_AGENT_ENABLED
        value: "true"
      - name: DD_CLUSTER_AGENT_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: token
            name: datadog-token
      - name: DD_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: datadog-secret
      - name: DD_DOGSTATSD_SOCKET
        value: /var/run/datadog/dsd.socket
      - name: DD_SYSTEM_PROBE_NETWORK_ENABLED
        value: "true"
      - name: DD_SYSTEM_PROBE_ENABLED
        value: "true"
      - name: DD_SYSPROBE_SOCKET
        value: /var/run/sysprobe/sysprobe.sock
      - name: DD_SYSTEM_PROBE_EXTERNAL
        value: "true"
      - name: DD_REMOTE_CONFIGURATION_ENABLED
        value: "true"
      - name: DD_SYSTEM_PROBE_SERVICE_MONITORING_ENABLED
        value: "true"
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      name: process-agent
      volumeMounts:
      - mountPath: /var/log/datadog
        name: logdatadog
      - mountPath: /etc/datadog-agent/auth
        name: datadog-agent-auth
        readOnly: true
      - mountPath: /etc/datadog-agent
        name: config
      - mountPath: /var/run/datadog
        name: dsdsocket
      - mountPath: /host/var/run
        name: runtimesocketdir
        readOnly: true
      - mountPath: /host/proc
        name: procdir
        readOnly: true
      - mountPath: /host/sys/fs/cgroup
        name: cgroups
        readOnly: true
      - mountPath: /sys/kernel/debug
        name: debugfs
      - mountPath: /var/run/sysprobe
        name: sysprobe-socket-dir
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ghf88
        readOnly: true
    - command:
      - otel-agent
      - --config=/etc/datadog-agent/otel-config.yaml
      - --core-config=/etc/datadog-agent/datadog.yaml
      - --sync-delay=30s
      env:
      - name: DD_CLUSTER_NAME
        value: heffner.k8s
      - name: DD_SITE
        value: us5.datadoghq.com
      - name: DD_LOG_LEVEL
        value: info
      - name: DD_TAGS
        value: '["env:prod"]'
      - name: DD_CLUSTER_AGENT_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: token
            name: datadog-token
      - name: DD_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: datadog-secret
      - name: DD_DOGSTATSD_SOCKET
        value: /var/run/datadog/dsd.socket
      - name: DD_AGENT_IPC_PORT
        value: "5009"
      - name: DD_AGENT_IPC_CONFIG_REFRESH_INTERVAL
        value: "60"
      - name: DD_REMOTE_CONFIGURATION_ENABLED
        value: "true"
      - name: DD_OTELCOLLECTOR_ENABLED
        value: "true"
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      name: otel-agent
      ports:
      - containerPort: 4317
        hostPort: 4317
        name: otel-grpc
      - containerPort: 4318
        hostPort: 4318
        name: otel-http
      volumeMounts:
      - mountPath: /var/log/datadog
        name: logdatadog
      - mountPath: /etc/datadog-agent
        name: config
      - mountPath: /etc/datadog-agent/auth
        name: datadog-agent-auth
        readOnly: true
      - mountPath: /etc/datadog-agent/otel-config.yaml
        name: otel-agent-config-volume
        readOnly: true
        subPath: otel-config.yaml
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ghf88
        readOnly: true
    initContainers:
    - args:
      - cp -vnr /etc/datadog-agent /opt
      command:
      - bash
      - -c
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      name: init-volume
      volumeMounts:
      - mountPath: /opt/datadog-agent
        name: config
      - mountPath: /var/log/nginx
        name: nginx-logs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ghf88
        readOnly: true
    - args:
      - for script in $(find /etc/cont-init.d/ -type f -name '*.sh' | sort) ; do bash
        $script ; done
      command:
      - bash
      - -c
      env:
      - name: DD_HEALTH_PORT
        value: "5555"
      - name: DD_CONTAINER_IMAGE_ENABLED
        value: "true"
      - name: KUBERNETES
        value: "yes"
      - name: DD_CLUSTER_AGENT_ENABLED
        value: "true"
      - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
        value: datadog-cluster-agent
      - name: DD_CLUSTER_AGENT_TOKEN_NAME
        value: datadog-token
      - name: DD_KUBERNETES_KUBELET_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      name: init-config
      volumeMounts:
      - mountPath: /var/log/datadog
        name: logdatadog
      - mountPath: /checks.d
        name: checksd
        readOnly: true
      - mountPath: /etc/datadog-agent/auth
        name: datadog-agent-auth
      - mountPath: /conf.d
        name: confd
        readOnly: true
      - mountPath: /etc/datadog-agent
        name: config
      - mountPath: /host/proc
        name: procdir
        readOnly: true
      - mountPath: /host/var/run
        name: runtimesocketdir
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ghf88
        readOnly: true
    - command:
      - cp
      - /etc/config/system-probe-seccomp.json
      - /host/var/lib/kubelet/seccomp/system-probe
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      name: seccomp-setup
      volumeMounts:
      - mountPath: /etc/config
        name: datadog-agent-security
      - mountPath: /host/var/lib/kubelet/seccomp
        name: seccomp-root
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ghf88
        readOnly: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    securityContext:
      runAsUser: 0
    serviceAccountName: datadog-agent
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/log/nginx
        type: DirectoryOrCreate
      name: nginx-logs
    - name: logdatadog
    - name: datadog-agent-auth
    - configMap:
        name: datadog-install-info
      name: installinfo
    - name: checksd
    - name: confd
    - name: config
    - hostPath:
        path: /proc
      name: procdir
    - hostPath:
        path: /sys/fs/cgroup
      name: cgroups
    - hostPath:
        path: /var/run/datadog
        type: DirectoryOrCreate
      name: dsdsocket
    - hostPath:
        path: /var/run
      name: runtimesocketdir
    - configMap:
        name: datadog-system-probe-seccomp
      name: datadog-agent-security
    - hostPath:
        path: /var/lib/kubelet/seccomp
      name: seccomp-root
    - hostPath:
        path: /var/run/datadog
        type: DirectoryOrCreate
      name: apmsocket
    - hostPath:
        path: /sys/kernel/debug
      name: debugfs
    - hostPath:
        path: /sys/kernel/tracing
      name: tracefs
    - hostPath:
        path: /sys/kernel/security
      name: securityfs
    - name: sysprobe-socket-dir
    - hostPath:
        path: /etc/passwd
      name: passwd
    - hostPath:
        path: /etc/group
      name: group
    - hostPath:
        path: /etc/os-release
      name: host-osrelease
    - hostPath:
        path: /
      name: hostroot
    - hostPath:
        path: /var/lib/datadog-agent/logs
      name: pointerdir
    - hostPath:
        path: /var/log/pods
      name: logpodpath
    - hostPath:
        path: /var/lib/docker/containers
      name: logcontainerpath
    - hostPath:
        path: /var/log/containers
      name: symlinkcontainerpath
    - configMap:
        name: datadog-otel-agent-config
      name: otel-agent-config-volume
    - name: kube-api-access-ghf88
      projected:
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/default-custom-config: dd51953a8d3959ab0339bd9777452024
      checksum/otel_agent-custom-config: c609e2fb7352676a67f0423b58970d43
      container.apparmor.security.beta.kubernetes.io/system-probe: unconfined
    labels:
      agent.datadoghq.com/component: agent
      agent.datadoghq.com/name: datadog
      agent.datadoghq.com/provider: ""
      app.kubernetes.io/component: agent
      app.kubernetes.io/instance: datadog-agent
      app.kubernetes.io/managed-by: datadog-operator
      app.kubernetes.io/name: datadog-agent-deployment
      app.kubernetes.io/part-of: default-datadog
      app.kubernetes.io/version: ""
      controller-revision-hash: 5749fbf44
      pod-template-generation: "25"
    name: datadog-agent-bgn9j
    namespace: default
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker3
    containers:
    - command:
      - agent
      - run
      env:
      - name: DD_HEALTH_PORT
        value: "5555"
      - name: DD_CONTAINER_IMAGE_ENABLED
        value: "true"
      - name: KUBERNETES
        value: "yes"
      - name: DD_CLUSTER_AGENT_ENABLED
        value: "true"
      - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
        value: datadog-cluster-agent
      - name: DD_CLUSTER_AGENT_TOKEN_NAME
        value: datadog-token
      - name: DD_KUBERNETES_KUBELET_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      - name: DD_CLUSTER_NAME
        value: heffner.k8s
      - name: DD_SITE
        value: us5.datadoghq.com
      - name: DD_LOG_LEVEL
        value: info
      - name: DD_TAGS
        value: '["env:prod"]'
      - name: DD_LANGUAGE_DETECTION_ENABLED
        value: "true"
      - name: DD_PROCESS_CONFIG_RUN_IN_CORE_AGENT_ENABLED
        value: "true"
      - name: DD_EXTRA_CONFIG_PROVIDERS
        value: clusterchecks endpointschecks
      - name: DD_RUNTIME_SECURITY_CONFIG_ENABLED
        value: "true"
      - name: DD_RUNTIME_SECURITY_CONFIG_SOCKET
        value: /var/run/sysprobe/runtime-security.sock
      - name: DD_CLUSTER_AGENT_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: token
            name: datadog-token
      - name: DD_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: datadog-secret
      - name: DD_DOGSTATSD_SOCKET
        value: /var/run/datadog/dsd.socket
      - name: DD_IGNORE_AUTOCONF
        value: kubernetes_state
      - name: DD_PROCESS_CONFIG_CONTAINER_COLLECTION_ENABLED
        value: "true"
      - name: DD_LOGS_ENABLED
        value: "true"
      - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
        value: "true"
      - name: DD_LOGS_CONFIG_K8S_CONTAINER_USE_FILE
        value: "true"
      - name: DD_SYSTEM_PROBE_NETWORK_ENABLED
        value: "true"
      - name: DD_SYSTEM_PROBE_ENABLED
        value: "true"
      - name: DD_SYSPROBE_SOCKET
        value: /var/run/sysprobe/sysprobe.sock
      - name: DD_COLLECT_DNS_STATS
        value: "true"
      - name: DD_SYSTEM_PROBE_CONFIG_ENABLE_CONNTRACK
        value: "true"
      - name: DD_ORCHESTRATOR_EXPLORER_ENABLED
        value: "true"
      - name: DD_ORCHESTRATOR_EXPLORER_CONTAINER_SCRUBBING_ENABLED
        value: "true"
      - name: DD_AGENT_IPC_PORT
        value: "5009"
      - name: DD_AGENT_IPC_CONFIG_REFRESH_INTERVAL
        value: "60"
      - name: DD_OTELCOLLECTOR_ENABLED
        value: "true"
      - name: DD_PROCESS_CONFIG_PROCESS_DISCOVERY_ENABLED
        value: "true"
      - name: DD_REMOTE_CONFIGURATION_ENABLED
        value: "true"
      - name: DD_SYSTEM_PROBE_SERVICE_MONITORING_ENABLED
        value: "true"
      - name: DD_PROCESS_CONFIG_PROCESS_COLLECTION_ENABLED
        value: "true"
      - name: DD_PROCESS_AGENT_ENABLED
        value: "true"
      - name: DD_KUBELET_TLS_VERIFY
        value: "false"
      - name: DD_CONTAINER_INCLUDE
        value: name:heffner.live
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /live
          port: 5555
        initialDelaySeconds: 15
        periodSeconds: 15
        timeoutSeconds: 5
      name: agent
      ports:
      - containerPort: 8125
        name: dogstatsdport
        protocol: UDP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /ready
          port: 5555
        initialDelaySeconds: 15
        periodSeconds: 15
        timeoutSeconds: 5
      startupProbe:
        failureThreshold: 6
        httpGet:
          path: /startup
          port: 5555
        initialDelaySeconds: 15
        periodSeconds: 15
        timeoutSeconds: 5
      volumeMounts:
      - mountPath: /var/log/datadog
        name: logdatadog
      - mountPath: /etc/datadog-agent/auth
        name: datadog-agent-auth
      - mountPath: /etc/datadog-agent/install_info
        name: installinfo
        readOnly: true
        subPath: install_info
      - mountPath: /etc/datadog-agent
        name: config
      - mountPath: /host/proc
        name: procdir
        readOnly: true
      - mountPath: /host/sys/fs/cgroup
        name: cgroups
        readOnly: true
      - mountPath: /var/run/datadog
        name: dsdsocket
      - mountPath: /host/var/run
        name: runtimesocketdir
        readOnly: true
      - mountPath: /var/run/sysprobe
        name: sysprobe-socket-dir
        readOnly: true
      - mountPath: /opt/datadog-agent/run
        name: pointerdir
      - mountPath: /var/log/pods
        name: logpodpath
        readOnly: true
      - mountPath: /var/lib/docker/containers
        name: logcontainerpath
        readOnly: true
      - mountPath: /var/log/containers
        name: symlinkcontainerpath
        readOnly: true
      - mountPath: /etc/passwd
        name: passwd
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8m5wj
        readOnly: true
    - command:
      - trace-agent
      - --config=/etc/datadog-agent/datadog.yaml
      env:
      - name: DD_INSTRUMENTATION_INSTALL_ID
        value: f656f4f7-9673-410d-a246-6ce3cd25a64f
      - name: DD_INSTRUMENTATION_INSTALL_TIME
        value: "1747942833"
      - name: DD_INSTRUMENTATION_INSTALL_TYPE
        value: k8s_manual
      - name: KUBERNETES
        value: "yes"
      - name: DD_CLUSTER_AGENT_ENABLED
        value: "true"
      - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
        value: datadog-cluster-agent
      - name: DD_CLUSTER_AGENT_TOKEN_NAME
        value: datadog-token
      - name: DD_KUBERNETES_KUBELET_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      - name: DD_CLUSTER_NAME
        value: heffner.k8s
      - name: DD_SITE
        value: us5.datadoghq.com
      - name: DD_LOG_LEVEL
        value: info
      - name: DD_TAGS
        value: '["env:prod"]'
      - name: DD_APM_ENABLED
        value: "true"
      - name: DD_APM_RECEIVER_SOCKET
        value: /var/run/datadog/apm.socket
      - name: DD_CLUSTER_AGENT_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: token
            name: datadog-token
      - name: DD_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: datadog-secret
      - name: DD_DOGSTATSD_SOCKET
        value: /var/run/datadog/dsd.socket
      - name: DD_REMOTE_CONFIGURATION_ENABLED
        value: "true"
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      livenessProbe:
        initialDelaySeconds: 15
        periodSeconds: 15
        tcpSocket:
          port: 8126
        timeoutSeconds: 5
      name: trace-agent
      ports:
      - containerPort: 8126
        name: traceport
      volumeMounts:
      - mountPath: /var/log/datadog
        name: logdatadog
      - mountPath: /host/proc
        name: procdir
        readOnly: true
      - mountPath: /host/sys/fs/cgroup
        name: cgroups
        readOnly: true
      - mountPath: /etc/datadog-agent/auth
        name: datadog-agent-auth
        readOnly: true
      - mountPath: /etc/datadog-agent
        name: config
      - mountPath: /var/run/datadog
        name: apmsocket
      - mountPath: /host/var/run
        name: runtimesocketdir
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8m5wj
        readOnly: true
    - command:
      - security-agent
      - start
      - -c=/etc/datadog-agent/datadog.yaml
      env:
      - name: HOST_ROOT
        value: /host/root
      - name: KUBERNETES
        value: "yes"
      - name: DD_CLUSTER_AGENT_ENABLED
        value: "true"
      - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
        value: datadog-cluster-agent
      - name: DD_CLUSTER_AGENT_TOKEN_NAME
        value: datadog-token
      - name: DD_KUBERNETES_KUBELET_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      - name: DD_CLUSTER_NAME
        value: heffner.k8s
      - name: DD_SITE
        value: us5.datadoghq.com
      - name: DD_LOG_LEVEL
        value: info
      - name: DD_TAGS
        value: '["env:prod"]'
      - name: DD_RUNTIME_SECURITY_CONFIG_ENABLED
        value: "true"
      - name: DD_RUNTIME_SECURITY_CONFIG_SOCKET
        value: /var/run/sysprobe/runtime-security.sock
      - name: DD_CLUSTER_AGENT_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: token
            name: datadog-token
      - name: DD_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: datadog-secret
      - name: DD_DOGSTATSD_SOCKET
        value: /var/run/datadog/dsd.socket
      - name: DD_REMOTE_CONFIGURATION_ENABLED
        value: "true"
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      name: security-agent
      volumeMounts:
      - mountPath: /var/log/datadog
        name: logdatadog
      - mountPath: /etc/datadog-agent/auth
        name: datadog-agent-auth
        readOnly: true
      - mountPath: /etc/datadog-agent
        name: config
      - mountPath: /var/run/datadog
        name: dsdsocket
      - mountPath: /host/var/run
        name: runtimesocketdir
        readOnly: true
      - mountPath: /var/run/sysprobe
        name: sysprobe-socket-dir
        readOnly: true
      - mountPath: /host/root
        name: hostroot
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8m5wj
        readOnly: true
    - command:
      - system-probe
      - --config=/etc/datadog-agent/system-probe.yaml
      env:
      - name: KUBERNETES
        value: "yes"
      - name: DD_CLUSTER_AGENT_ENABLED
        value: "true"
      - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
        value: datadog-cluster-agent
      - name: DD_CLUSTER_AGENT_TOKEN_NAME
        value: datadog-token
      - name: DD_KUBERNETES_KUBELET_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      - name: DD_CLUSTER_NAME
        value: heffner.k8s
      - name: DD_SITE
        value: us5.datadoghq.com
      - name: DD_LOG_LEVEL
        value: info
      - name: DD_TAGS
        value: '["env:prod"]'
      - name: DD_RUNTIME_SECURITY_CONFIG_ENABLED
        value: "true"
      - name: DD_RUNTIME_SECURITY_CONFIG_SOCKET
        value: /var/run/sysprobe/runtime-security.sock
      - name: DD_RUNTIME_SECURITY_CONFIG_NETWORK_ENABLED
        value: "true"
      - name: DD_RUNTIME_SECURITY_CONFIG_ACTIVITY_DUMP_ENABLED
        value: "true"
      - name: DD_RUNTIME_SECURITY_CONFIG_REMOTE_CONFIGURATION_ENABLED
        value: "true"
      - name: DD_RUNTIME_SECURITY_CONFIG_POLICIES_DIR
        value: /etc/datadog-agent/runtime-security.d
      - name: DD_CLUSTER_AGENT_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: token
            name: datadog-token
      - name: DD_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: datadog-secret
      - name: DD_DOGSTATSD_SOCKET
        value: /var/run/datadog/dsd.socket
      - name: DD_SYSTEM_PROBE_NETWORK_ENABLED
        value: "true"
      - name: DD_SYSTEM_PROBE_ENABLED
        value: "true"
      - name: DD_SYSPROBE_SOCKET
        value: /var/run/sysprobe/sysprobe.sock
      - name: DD_COLLECT_DNS_STATS
        value: "true"
      - name: DD_SYSTEM_PROBE_CONFIG_ENABLE_CONNTRACK
        value: "true"
      - name: DD_REMOTE_CONFIGURATION_ENABLED
        value: "true"
      - name: DD_SYSTEM_PROBE_SERVICE_MONITORING_ENABLED
        value: "true"
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      name: system-probe
      securityContext:
        appArmorProfile:
          type: Unconfined
        capabilities:
          add:
          - CHOWN
          - DAC_READ_SEARCH
          - IPC_LOCK
          - NET_ADMIN
          - NET_BROADCAST
          - NET_RAW
          - SYS_ADMIN
          - SYS_PTRACE
          - SYS_RESOURCE
        seccompProfile:
          localhostProfile: system-probe
          type: Localhost
      volumeMounts:
      - mountPath: /var/log/datadog
        name: logdatadog
      - mountPath: /etc/datadog-agent/auth
        name: datadog-agent-auth
        readOnly: true
      - mountPath: /etc/datadog-agent
        name: config
      - mountPath: /sys/kernel/debug
        name: debugfs
      - mountPath: /sys/kernel/tracing
        name: tracefs
      - mountPath: /host/sys/kernel/security
        name: securityfs
        readOnly: true
      - mountPath: /var/run/sysprobe
        name: sysprobe-socket-dir
      - mountPath: /host/proc
        name: procdir
        readOnly: true
      - mountPath: /etc/passwd
        name: passwd
        readOnly: true
      - mountPath: /etc/group
        name: group
        readOnly: true
      - mountPath: /host/etc/os-release
        name: host-osrelease
        readOnly: true
      - mountPath: /host/sys/fs/cgroup
        name: cgroups
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8m5wj
        readOnly: true
    - command:
      - process-agent
      - --config=/etc/datadog-agent/datadog.yaml
      - --sysprobe-config=/etc/datadog-agent/system-probe.yaml
      env:
      - name: KUBERNETES
        value: "yes"
      - name: DD_CLUSTER_AGENT_ENABLED
        value: "true"
      - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
        value: datadog-cluster-agent
      - name: DD_CLUSTER_AGENT_TOKEN_NAME
        value: datadog-token
      - name: DD_KUBERNETES_KUBELET_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      - name: DD_CLUSTER_NAME
        value: heffner.k8s
      - name: DD_SITE
        value: us5.datadoghq.com
      - name: DD_LOG_LEVEL
        value: info
      - name: DD_TAGS
        value: '["env:prod"]'
      - name: DD_LANGUAGE_DETECTION_ENABLED
        value: "true"
      - name: DD_PROCESS_CONFIG_RUN_IN_CORE_AGENT_ENABLED
        value: "true"
      - name: DD_CLUSTER_AGENT_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: token
            name: datadog-token
      - name: DD_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: datadog-secret
      - name: DD_DOGSTATSD_SOCKET
        value: /var/run/datadog/dsd.socket
      - name: DD_SYSTEM_PROBE_NETWORK_ENABLED
        value: "true"
      - name: DD_SYSTEM_PROBE_ENABLED
        value: "true"
      - name: DD_SYSPROBE_SOCKET
        value: /var/run/sysprobe/sysprobe.sock
      - name: DD_SYSTEM_PROBE_EXTERNAL
        value: "true"
      - name: DD_REMOTE_CONFIGURATION_ENABLED
        value: "true"
      - name: DD_SYSTEM_PROBE_SERVICE_MONITORING_ENABLED
        value: "true"
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      name: process-agent
      volumeMounts:
      - mountPath: /var/log/datadog
        name: logdatadog
      - mountPath: /etc/datadog-agent/auth
        name: datadog-agent-auth
        readOnly: true
      - mountPath: /etc/datadog-agent
        name: config
      - mountPath: /var/run/datadog
        name: dsdsocket
      - mountPath: /host/var/run
        name: runtimesocketdir
        readOnly: true
      - mountPath: /host/proc
        name: procdir
        readOnly: true
      - mountPath: /host/sys/fs/cgroup
        name: cgroups
        readOnly: true
      - mountPath: /sys/kernel/debug
        name: debugfs
      - mountPath: /var/run/sysprobe
        name: sysprobe-socket-dir
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8m5wj
        readOnly: true
    - command:
      - otel-agent
      - --config=/etc/datadog-agent/otel-config.yaml
      - --core-config=/etc/datadog-agent/datadog.yaml
      - --sync-delay=30s
      env:
      - name: DD_CLUSTER_NAME
        value: heffner.k8s
      - name: DD_SITE
        value: us5.datadoghq.com
      - name: DD_LOG_LEVEL
        value: info
      - name: DD_TAGS
        value: '["env:prod"]'
      - name: DD_CLUSTER_AGENT_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: token
            name: datadog-token
      - name: DD_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: datadog-secret
      - name: DD_DOGSTATSD_SOCKET
        value: /var/run/datadog/dsd.socket
      - name: DD_AGENT_IPC_PORT
        value: "5009"
      - name: DD_AGENT_IPC_CONFIG_REFRESH_INTERVAL
        value: "60"
      - name: DD_REMOTE_CONFIGURATION_ENABLED
        value: "true"
      - name: DD_OTELCOLLECTOR_ENABLED
        value: "true"
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      name: otel-agent
      ports:
      - containerPort: 4317
        hostPort: 4317
        name: otel-grpc
      - containerPort: 4318
        hostPort: 4318
        name: otel-http
      volumeMounts:
      - mountPath: /var/log/datadog
        name: logdatadog
      - mountPath: /etc/datadog-agent
        name: config
      - mountPath: /etc/datadog-agent/auth
        name: datadog-agent-auth
        readOnly: true
      - mountPath: /etc/datadog-agent/otel-config.yaml
        name: otel-agent-config-volume
        readOnly: true
        subPath: otel-config.yaml
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8m5wj
        readOnly: true
    initContainers:
    - args:
      - cp -vnr /etc/datadog-agent /opt
      command:
      - bash
      - -c
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      name: init-volume
      volumeMounts:
      - mountPath: /opt/datadog-agent
        name: config
      - mountPath: /var/log/nginx
        name: nginx-logs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8m5wj
        readOnly: true
    - args:
      - for script in $(find /etc/cont-init.d/ -type f -name '*.sh' | sort) ; do bash
        $script ; done
      command:
      - bash
      - -c
      env:
      - name: DD_HEALTH_PORT
        value: "5555"
      - name: DD_CONTAINER_IMAGE_ENABLED
        value: "true"
      - name: KUBERNETES
        value: "yes"
      - name: DD_CLUSTER_AGENT_ENABLED
        value: "true"
      - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
        value: datadog-cluster-agent
      - name: DD_CLUSTER_AGENT_TOKEN_NAME
        value: datadog-token
      - name: DD_KUBERNETES_KUBELET_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      name: init-config
      volumeMounts:
      - mountPath: /var/log/datadog
        name: logdatadog
      - mountPath: /checks.d
        name: checksd
        readOnly: true
      - mountPath: /etc/datadog-agent/auth
        name: datadog-agent-auth
      - mountPath: /conf.d
        name: confd
        readOnly: true
      - mountPath: /etc/datadog-agent
        name: config
      - mountPath: /host/proc
        name: procdir
        readOnly: true
      - mountPath: /host/var/run
        name: runtimesocketdir
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8m5wj
        readOnly: true
    - command:
      - cp
      - /etc/config/system-probe-seccomp.json
      - /host/var/lib/kubelet/seccomp/system-probe
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      name: seccomp-setup
      volumeMounts:
      - mountPath: /etc/config
        name: datadog-agent-security
      - mountPath: /host/var/lib/kubelet/seccomp
        name: seccomp-root
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8m5wj
        readOnly: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    securityContext:
      runAsUser: 0
    serviceAccountName: datadog-agent
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/log/nginx
        type: DirectoryOrCreate
      name: nginx-logs
    - name: logdatadog
    - name: datadog-agent-auth
    - configMap:
        name: datadog-install-info
      name: installinfo
    - name: checksd
    - name: confd
    - name: config
    - hostPath:
        path: /proc
      name: procdir
    - hostPath:
        path: /sys/fs/cgroup
      name: cgroups
    - hostPath:
        path: /var/run/datadog
        type: DirectoryOrCreate
      name: dsdsocket
    - hostPath:
        path: /var/run
      name: runtimesocketdir
    - configMap:
        name: datadog-system-probe-seccomp
      name: datadog-agent-security
    - hostPath:
        path: /var/lib/kubelet/seccomp
      name: seccomp-root
    - hostPath:
        path: /var/run/datadog
        type: DirectoryOrCreate
      name: apmsocket
    - hostPath:
        path: /sys/kernel/debug
      name: debugfs
    - hostPath:
        path: /sys/kernel/tracing
      name: tracefs
    - hostPath:
        path: /sys/kernel/security
      name: securityfs
    - name: sysprobe-socket-dir
    - hostPath:
        path: /etc/passwd
      name: passwd
    - hostPath:
        path: /etc/group
      name: group
    - hostPath:
        path: /etc/os-release
      name: host-osrelease
    - hostPath:
        path: /
      name: hostroot
    - hostPath:
        path: /var/lib/datadog-agent/logs
      name: pointerdir
    - hostPath:
        path: /var/log/pods
      name: logpodpath
    - hostPath:
        path: /var/lib/docker/containers
      name: logcontainerpath
    - hostPath:
        path: /var/log/containers
      name: symlinkcontainerpath
    - configMap:
        name: datadog-otel-agent-config
      name: otel-agent-config-volume
    - name: kube-api-access-8m5wj
      projected:
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/default-custom-config: dd51953a8d3959ab0339bd9777452024
      checksum/otel_agent-custom-config: c609e2fb7352676a67f0423b58970d43
      container.apparmor.security.beta.kubernetes.io/system-probe: unconfined
    labels:
      agent.datadoghq.com/component: agent
      agent.datadoghq.com/name: datadog
      agent.datadoghq.com/provider: ""
      app.kubernetes.io/component: agent
      app.kubernetes.io/instance: datadog-agent
      app.kubernetes.io/managed-by: datadog-operator
      app.kubernetes.io/name: datadog-agent-deployment
      app.kubernetes.io/part-of: default-datadog
      app.kubernetes.io/version: ""
      controller-revision-hash: 5749fbf44
      pod-template-generation: "25"
    name: datadog-agent-l56m4
    namespace: default
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker1
    containers:
    - command:
      - agent
      - run
      env:
      - name: DD_HEALTH_PORT
        value: "5555"
      - name: DD_CONTAINER_IMAGE_ENABLED
        value: "true"
      - name: KUBERNETES
        value: "yes"
      - name: DD_CLUSTER_AGENT_ENABLED
        value: "true"
      - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
        value: datadog-cluster-agent
      - name: DD_CLUSTER_AGENT_TOKEN_NAME
        value: datadog-token
      - name: DD_KUBERNETES_KUBELET_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      - name: DD_CLUSTER_NAME
        value: heffner.k8s
      - name: DD_SITE
        value: us5.datadoghq.com
      - name: DD_LOG_LEVEL
        value: info
      - name: DD_TAGS
        value: '["env:prod"]'
      - name: DD_LANGUAGE_DETECTION_ENABLED
        value: "true"
      - name: DD_PROCESS_CONFIG_RUN_IN_CORE_AGENT_ENABLED
        value: "true"
      - name: DD_EXTRA_CONFIG_PROVIDERS
        value: clusterchecks endpointschecks
      - name: DD_RUNTIME_SECURITY_CONFIG_ENABLED
        value: "true"
      - name: DD_RUNTIME_SECURITY_CONFIG_SOCKET
        value: /var/run/sysprobe/runtime-security.sock
      - name: DD_CLUSTER_AGENT_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: token
            name: datadog-token
      - name: DD_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: datadog-secret
      - name: DD_DOGSTATSD_SOCKET
        value: /var/run/datadog/dsd.socket
      - name: DD_IGNORE_AUTOCONF
        value: kubernetes_state
      - name: DD_PROCESS_CONFIG_CONTAINER_COLLECTION_ENABLED
        value: "true"
      - name: DD_LOGS_ENABLED
        value: "true"
      - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
        value: "true"
      - name: DD_LOGS_CONFIG_K8S_CONTAINER_USE_FILE
        value: "true"
      - name: DD_SYSTEM_PROBE_NETWORK_ENABLED
        value: "true"
      - name: DD_SYSTEM_PROBE_ENABLED
        value: "true"
      - name: DD_SYSPROBE_SOCKET
        value: /var/run/sysprobe/sysprobe.sock
      - name: DD_COLLECT_DNS_STATS
        value: "true"
      - name: DD_SYSTEM_PROBE_CONFIG_ENABLE_CONNTRACK
        value: "true"
      - name: DD_ORCHESTRATOR_EXPLORER_ENABLED
        value: "true"
      - name: DD_ORCHESTRATOR_EXPLORER_CONTAINER_SCRUBBING_ENABLED
        value: "true"
      - name: DD_AGENT_IPC_PORT
        value: "5009"
      - name: DD_AGENT_IPC_CONFIG_REFRESH_INTERVAL
        value: "60"
      - name: DD_OTELCOLLECTOR_ENABLED
        value: "true"
      - name: DD_PROCESS_CONFIG_PROCESS_DISCOVERY_ENABLED
        value: "true"
      - name: DD_REMOTE_CONFIGURATION_ENABLED
        value: "true"
      - name: DD_SYSTEM_PROBE_SERVICE_MONITORING_ENABLED
        value: "true"
      - name: DD_PROCESS_CONFIG_PROCESS_COLLECTION_ENABLED
        value: "true"
      - name: DD_PROCESS_AGENT_ENABLED
        value: "true"
      - name: DD_KUBELET_TLS_VERIFY
        value: "false"
      - name: DD_CONTAINER_INCLUDE
        value: name:heffner.live
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /live
          port: 5555
        initialDelaySeconds: 15
        periodSeconds: 15
        timeoutSeconds: 5
      name: agent
      ports:
      - containerPort: 8125
        name: dogstatsdport
        protocol: UDP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /ready
          port: 5555
        initialDelaySeconds: 15
        periodSeconds: 15
        timeoutSeconds: 5
      startupProbe:
        failureThreshold: 6
        httpGet:
          path: /startup
          port: 5555
        initialDelaySeconds: 15
        periodSeconds: 15
        timeoutSeconds: 5
      volumeMounts:
      - mountPath: /var/log/datadog
        name: logdatadog
      - mountPath: /etc/datadog-agent/auth
        name: datadog-agent-auth
      - mountPath: /etc/datadog-agent/install_info
        name: installinfo
        readOnly: true
        subPath: install_info
      - mountPath: /etc/datadog-agent
        name: config
      - mountPath: /host/proc
        name: procdir
        readOnly: true
      - mountPath: /host/sys/fs/cgroup
        name: cgroups
        readOnly: true
      - mountPath: /var/run/datadog
        name: dsdsocket
      - mountPath: /host/var/run
        name: runtimesocketdir
        readOnly: true
      - mountPath: /var/run/sysprobe
        name: sysprobe-socket-dir
        readOnly: true
      - mountPath: /opt/datadog-agent/run
        name: pointerdir
      - mountPath: /var/log/pods
        name: logpodpath
        readOnly: true
      - mountPath: /var/lib/docker/containers
        name: logcontainerpath
        readOnly: true
      - mountPath: /var/log/containers
        name: symlinkcontainerpath
        readOnly: true
      - mountPath: /etc/passwd
        name: passwd
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kfw9d
        readOnly: true
    - command:
      - trace-agent
      - --config=/etc/datadog-agent/datadog.yaml
      env:
      - name: DD_INSTRUMENTATION_INSTALL_ID
        value: f656f4f7-9673-410d-a246-6ce3cd25a64f
      - name: DD_INSTRUMENTATION_INSTALL_TIME
        value: "1747942833"
      - name: DD_INSTRUMENTATION_INSTALL_TYPE
        value: k8s_manual
      - name: KUBERNETES
        value: "yes"
      - name: DD_CLUSTER_AGENT_ENABLED
        value: "true"
      - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
        value: datadog-cluster-agent
      - name: DD_CLUSTER_AGENT_TOKEN_NAME
        value: datadog-token
      - name: DD_KUBERNETES_KUBELET_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      - name: DD_CLUSTER_NAME
        value: heffner.k8s
      - name: DD_SITE
        value: us5.datadoghq.com
      - name: DD_LOG_LEVEL
        value: info
      - name: DD_TAGS
        value: '["env:prod"]'
      - name: DD_APM_ENABLED
        value: "true"
      - name: DD_APM_RECEIVER_SOCKET
        value: /var/run/datadog/apm.socket
      - name: DD_CLUSTER_AGENT_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: token
            name: datadog-token
      - name: DD_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: datadog-secret
      - name: DD_DOGSTATSD_SOCKET
        value: /var/run/datadog/dsd.socket
      - name: DD_REMOTE_CONFIGURATION_ENABLED
        value: "true"
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      livenessProbe:
        initialDelaySeconds: 15
        periodSeconds: 15
        tcpSocket:
          port: 8126
        timeoutSeconds: 5
      name: trace-agent
      ports:
      - containerPort: 8126
        name: traceport
      volumeMounts:
      - mountPath: /var/log/datadog
        name: logdatadog
      - mountPath: /host/proc
        name: procdir
        readOnly: true
      - mountPath: /host/sys/fs/cgroup
        name: cgroups
        readOnly: true
      - mountPath: /etc/datadog-agent/auth
        name: datadog-agent-auth
        readOnly: true
      - mountPath: /etc/datadog-agent
        name: config
      - mountPath: /var/run/datadog
        name: apmsocket
      - mountPath: /host/var/run
        name: runtimesocketdir
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kfw9d
        readOnly: true
    - command:
      - security-agent
      - start
      - -c=/etc/datadog-agent/datadog.yaml
      env:
      - name: HOST_ROOT
        value: /host/root
      - name: KUBERNETES
        value: "yes"
      - name: DD_CLUSTER_AGENT_ENABLED
        value: "true"
      - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
        value: datadog-cluster-agent
      - name: DD_CLUSTER_AGENT_TOKEN_NAME
        value: datadog-token
      - name: DD_KUBERNETES_KUBELET_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      - name: DD_CLUSTER_NAME
        value: heffner.k8s
      - name: DD_SITE
        value: us5.datadoghq.com
      - name: DD_LOG_LEVEL
        value: info
      - name: DD_TAGS
        value: '["env:prod"]'
      - name: DD_RUNTIME_SECURITY_CONFIG_ENABLED
        value: "true"
      - name: DD_RUNTIME_SECURITY_CONFIG_SOCKET
        value: /var/run/sysprobe/runtime-security.sock
      - name: DD_CLUSTER_AGENT_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: token
            name: datadog-token
      - name: DD_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: datadog-secret
      - name: DD_DOGSTATSD_SOCKET
        value: /var/run/datadog/dsd.socket
      - name: DD_REMOTE_CONFIGURATION_ENABLED
        value: "true"
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      name: security-agent
      volumeMounts:
      - mountPath: /var/log/datadog
        name: logdatadog
      - mountPath: /etc/datadog-agent/auth
        name: datadog-agent-auth
        readOnly: true
      - mountPath: /etc/datadog-agent
        name: config
      - mountPath: /var/run/datadog
        name: dsdsocket
      - mountPath: /host/var/run
        name: runtimesocketdir
        readOnly: true
      - mountPath: /var/run/sysprobe
        name: sysprobe-socket-dir
        readOnly: true
      - mountPath: /host/root
        name: hostroot
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kfw9d
        readOnly: true
    - command:
      - system-probe
      - --config=/etc/datadog-agent/system-probe.yaml
      env:
      - name: KUBERNETES
        value: "yes"
      - name: DD_CLUSTER_AGENT_ENABLED
        value: "true"
      - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
        value: datadog-cluster-agent
      - name: DD_CLUSTER_AGENT_TOKEN_NAME
        value: datadog-token
      - name: DD_KUBERNETES_KUBELET_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      - name: DD_CLUSTER_NAME
        value: heffner.k8s
      - name: DD_SITE
        value: us5.datadoghq.com
      - name: DD_LOG_LEVEL
        value: info
      - name: DD_TAGS
        value: '["env:prod"]'
      - name: DD_RUNTIME_SECURITY_CONFIG_ENABLED
        value: "true"
      - name: DD_RUNTIME_SECURITY_CONFIG_SOCKET
        value: /var/run/sysprobe/runtime-security.sock
      - name: DD_RUNTIME_SECURITY_CONFIG_NETWORK_ENABLED
        value: "true"
      - name: DD_RUNTIME_SECURITY_CONFIG_ACTIVITY_DUMP_ENABLED
        value: "true"
      - name: DD_RUNTIME_SECURITY_CONFIG_REMOTE_CONFIGURATION_ENABLED
        value: "true"
      - name: DD_RUNTIME_SECURITY_CONFIG_POLICIES_DIR
        value: /etc/datadog-agent/runtime-security.d
      - name: DD_CLUSTER_AGENT_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: token
            name: datadog-token
      - name: DD_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: datadog-secret
      - name: DD_DOGSTATSD_SOCKET
        value: /var/run/datadog/dsd.socket
      - name: DD_SYSTEM_PROBE_NETWORK_ENABLED
        value: "true"
      - name: DD_SYSTEM_PROBE_ENABLED
        value: "true"
      - name: DD_SYSPROBE_SOCKET
        value: /var/run/sysprobe/sysprobe.sock
      - name: DD_COLLECT_DNS_STATS
        value: "true"
      - name: DD_SYSTEM_PROBE_CONFIG_ENABLE_CONNTRACK
        value: "true"
      - name: DD_REMOTE_CONFIGURATION_ENABLED
        value: "true"
      - name: DD_SYSTEM_PROBE_SERVICE_MONITORING_ENABLED
        value: "true"
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      name: system-probe
      securityContext:
        appArmorProfile:
          type: Unconfined
        capabilities:
          add:
          - CHOWN
          - DAC_READ_SEARCH
          - IPC_LOCK
          - NET_ADMIN
          - NET_BROADCAST
          - NET_RAW
          - SYS_ADMIN
          - SYS_PTRACE
          - SYS_RESOURCE
        seccompProfile:
          localhostProfile: system-probe
          type: Localhost
      volumeMounts:
      - mountPath: /var/log/datadog
        name: logdatadog
      - mountPath: /etc/datadog-agent/auth
        name: datadog-agent-auth
        readOnly: true
      - mountPath: /etc/datadog-agent
        name: config
      - mountPath: /sys/kernel/debug
        name: debugfs
      - mountPath: /sys/kernel/tracing
        name: tracefs
      - mountPath: /host/sys/kernel/security
        name: securityfs
        readOnly: true
      - mountPath: /var/run/sysprobe
        name: sysprobe-socket-dir
      - mountPath: /host/proc
        name: procdir
        readOnly: true
      - mountPath: /etc/passwd
        name: passwd
        readOnly: true
      - mountPath: /etc/group
        name: group
        readOnly: true
      - mountPath: /host/etc/os-release
        name: host-osrelease
        readOnly: true
      - mountPath: /host/sys/fs/cgroup
        name: cgroups
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kfw9d
        readOnly: true
    - command:
      - process-agent
      - --config=/etc/datadog-agent/datadog.yaml
      - --sysprobe-config=/etc/datadog-agent/system-probe.yaml
      env:
      - name: KUBERNETES
        value: "yes"
      - name: DD_CLUSTER_AGENT_ENABLED
        value: "true"
      - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
        value: datadog-cluster-agent
      - name: DD_CLUSTER_AGENT_TOKEN_NAME
        value: datadog-token
      - name: DD_KUBERNETES_KUBELET_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      - name: DD_CLUSTER_NAME
        value: heffner.k8s
      - name: DD_SITE
        value: us5.datadoghq.com
      - name: DD_LOG_LEVEL
        value: info
      - name: DD_TAGS
        value: '["env:prod"]'
      - name: DD_LANGUAGE_DETECTION_ENABLED
        value: "true"
      - name: DD_PROCESS_CONFIG_RUN_IN_CORE_AGENT_ENABLED
        value: "true"
      - name: DD_CLUSTER_AGENT_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: token
            name: datadog-token
      - name: DD_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: datadog-secret
      - name: DD_DOGSTATSD_SOCKET
        value: /var/run/datadog/dsd.socket
      - name: DD_SYSTEM_PROBE_NETWORK_ENABLED
        value: "true"
      - name: DD_SYSTEM_PROBE_ENABLED
        value: "true"
      - name: DD_SYSPROBE_SOCKET
        value: /var/run/sysprobe/sysprobe.sock
      - name: DD_SYSTEM_PROBE_EXTERNAL
        value: "true"
      - name: DD_REMOTE_CONFIGURATION_ENABLED
        value: "true"
      - name: DD_SYSTEM_PROBE_SERVICE_MONITORING_ENABLED
        value: "true"
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      name: process-agent
      volumeMounts:
      - mountPath: /var/log/datadog
        name: logdatadog
      - mountPath: /etc/datadog-agent/auth
        name: datadog-agent-auth
        readOnly: true
      - mountPath: /etc/datadog-agent
        name: config
      - mountPath: /var/run/datadog
        name: dsdsocket
      - mountPath: /host/var/run
        name: runtimesocketdir
        readOnly: true
      - mountPath: /host/proc
        name: procdir
        readOnly: true
      - mountPath: /host/sys/fs/cgroup
        name: cgroups
        readOnly: true
      - mountPath: /sys/kernel/debug
        name: debugfs
      - mountPath: /var/run/sysprobe
        name: sysprobe-socket-dir
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kfw9d
        readOnly: true
    - command:
      - otel-agent
      - --config=/etc/datadog-agent/otel-config.yaml
      - --core-config=/etc/datadog-agent/datadog.yaml
      - --sync-delay=30s
      env:
      - name: DD_CLUSTER_NAME
        value: heffner.k8s
      - name: DD_SITE
        value: us5.datadoghq.com
      - name: DD_LOG_LEVEL
        value: info
      - name: DD_TAGS
        value: '["env:prod"]'
      - name: DD_CLUSTER_AGENT_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: token
            name: datadog-token
      - name: DD_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: datadog-secret
      - name: DD_DOGSTATSD_SOCKET
        value: /var/run/datadog/dsd.socket
      - name: DD_AGENT_IPC_PORT
        value: "5009"
      - name: DD_AGENT_IPC_CONFIG_REFRESH_INTERVAL
        value: "60"
      - name: DD_REMOTE_CONFIGURATION_ENABLED
        value: "true"
      - name: DD_OTELCOLLECTOR_ENABLED
        value: "true"
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      name: otel-agent
      ports:
      - containerPort: 4317
        hostPort: 4317
        name: otel-grpc
      - containerPort: 4318
        hostPort: 4318
        name: otel-http
      volumeMounts:
      - mountPath: /var/log/datadog
        name: logdatadog
      - mountPath: /etc/datadog-agent
        name: config
      - mountPath: /etc/datadog-agent/auth
        name: datadog-agent-auth
        readOnly: true
      - mountPath: /etc/datadog-agent/otel-config.yaml
        name: otel-agent-config-volume
        readOnly: true
        subPath: otel-config.yaml
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kfw9d
        readOnly: true
    initContainers:
    - args:
      - cp -vnr /etc/datadog-agent /opt
      command:
      - bash
      - -c
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      name: init-volume
      volumeMounts:
      - mountPath: /opt/datadog-agent
        name: config
      - mountPath: /var/log/nginx
        name: nginx-logs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kfw9d
        readOnly: true
    - args:
      - for script in $(find /etc/cont-init.d/ -type f -name '*.sh' | sort) ; do bash
        $script ; done
      command:
      - bash
      - -c
      env:
      - name: DD_HEALTH_PORT
        value: "5555"
      - name: DD_CONTAINER_IMAGE_ENABLED
        value: "true"
      - name: KUBERNETES
        value: "yes"
      - name: DD_CLUSTER_AGENT_ENABLED
        value: "true"
      - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
        value: datadog-cluster-agent
      - name: DD_CLUSTER_AGENT_TOKEN_NAME
        value: datadog-token
      - name: DD_KUBERNETES_KUBELET_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      name: init-config
      volumeMounts:
      - mountPath: /var/log/datadog
        name: logdatadog
      - mountPath: /checks.d
        name: checksd
        readOnly: true
      - mountPath: /etc/datadog-agent/auth
        name: datadog-agent-auth
      - mountPath: /conf.d
        name: confd
        readOnly: true
      - mountPath: /etc/datadog-agent
        name: config
      - mountPath: /host/proc
        name: procdir
        readOnly: true
      - mountPath: /host/var/run
        name: runtimesocketdir
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kfw9d
        readOnly: true
    - command:
      - cp
      - /etc/config/system-probe-seccomp.json
      - /host/var/lib/kubelet/seccomp/system-probe
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      name: seccomp-setup
      volumeMounts:
      - mountPath: /etc/config
        name: datadog-agent-security
      - mountPath: /host/var/lib/kubelet/seccomp
        name: seccomp-root
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kfw9d
        readOnly: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    securityContext:
      runAsUser: 0
    serviceAccountName: datadog-agent
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/log/nginx
        type: DirectoryOrCreate
      name: nginx-logs
    - name: logdatadog
    - name: datadog-agent-auth
    - configMap:
        name: datadog-install-info
      name: installinfo
    - name: checksd
    - name: confd
    - name: config
    - hostPath:
        path: /proc
      name: procdir
    - hostPath:
        path: /sys/fs/cgroup
      name: cgroups
    - hostPath:
        path: /var/run/datadog
        type: DirectoryOrCreate
      name: dsdsocket
    - hostPath:
        path: /var/run
      name: runtimesocketdir
    - configMap:
        name: datadog-system-probe-seccomp
      name: datadog-agent-security
    - hostPath:
        path: /var/lib/kubelet/seccomp
      name: seccomp-root
    - hostPath:
        path: /var/run/datadog
        type: DirectoryOrCreate
      name: apmsocket
    - hostPath:
        path: /sys/kernel/debug
      name: debugfs
    - hostPath:
        path: /sys/kernel/tracing
      name: tracefs
    - hostPath:
        path: /sys/kernel/security
      name: securityfs
    - name: sysprobe-socket-dir
    - hostPath:
        path: /etc/passwd
      name: passwd
    - hostPath:
        path: /etc/group
      name: group
    - hostPath:
        path: /etc/os-release
      name: host-osrelease
    - hostPath:
        path: /
      name: hostroot
    - hostPath:
        path: /var/lib/datadog-agent/logs
      name: pointerdir
    - hostPath:
        path: /var/log/pods
      name: logpodpath
    - hostPath:
        path: /var/lib/docker/containers
      name: logcontainerpath
    - hostPath:
        path: /var/log/containers
      name: symlinkcontainerpath
    - configMap:
        name: datadog-otel-agent-config
      name: otel-agent-config-volume
    - name: kube-api-access-kfw9d
      projected:
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/default-custom-config: dd51953a8d3959ab0339bd9777452024
      checksum/otel_agent-custom-config: c609e2fb7352676a67f0423b58970d43
      container.apparmor.security.beta.kubernetes.io/system-probe: unconfined
    labels:
      agent.datadoghq.com/component: agent
      agent.datadoghq.com/name: datadog
      agent.datadoghq.com/provider: ""
      app.kubernetes.io/component: agent
      app.kubernetes.io/instance: datadog-agent
      app.kubernetes.io/managed-by: datadog-operator
      app.kubernetes.io/name: datadog-agent-deployment
      app.kubernetes.io/part-of: default-datadog
      app.kubernetes.io/version: ""
      controller-revision-hash: 5749fbf44
      pod-template-generation: "25"
    name: datadog-agent-xfvpd
    namespace: default
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - k8-primary
    containers:
    - command:
      - agent
      - run
      env:
      - name: DD_HEALTH_PORT
        value: "5555"
      - name: DD_CONTAINER_IMAGE_ENABLED
        value: "true"
      - name: KUBERNETES
        value: "yes"
      - name: DD_CLUSTER_AGENT_ENABLED
        value: "true"
      - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
        value: datadog-cluster-agent
      - name: DD_CLUSTER_AGENT_TOKEN_NAME
        value: datadog-token
      - name: DD_KUBERNETES_KUBELET_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      - name: DD_CLUSTER_NAME
        value: heffner.k8s
      - name: DD_SITE
        value: us5.datadoghq.com
      - name: DD_LOG_LEVEL
        value: info
      - name: DD_TAGS
        value: '["env:prod"]'
      - name: DD_LANGUAGE_DETECTION_ENABLED
        value: "true"
      - name: DD_PROCESS_CONFIG_RUN_IN_CORE_AGENT_ENABLED
        value: "true"
      - name: DD_EXTRA_CONFIG_PROVIDERS
        value: clusterchecks endpointschecks
      - name: DD_RUNTIME_SECURITY_CONFIG_ENABLED
        value: "true"
      - name: DD_RUNTIME_SECURITY_CONFIG_SOCKET
        value: /var/run/sysprobe/runtime-security.sock
      - name: DD_CLUSTER_AGENT_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: token
            name: datadog-token
      - name: DD_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: datadog-secret
      - name: DD_DOGSTATSD_SOCKET
        value: /var/run/datadog/dsd.socket
      - name: DD_IGNORE_AUTOCONF
        value: kubernetes_state
      - name: DD_PROCESS_CONFIG_CONTAINER_COLLECTION_ENABLED
        value: "true"
      - name: DD_LOGS_ENABLED
        value: "true"
      - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
        value: "true"
      - name: DD_LOGS_CONFIG_K8S_CONTAINER_USE_FILE
        value: "true"
      - name: DD_SYSTEM_PROBE_NETWORK_ENABLED
        value: "true"
      - name: DD_SYSTEM_PROBE_ENABLED
        value: "true"
      - name: DD_SYSPROBE_SOCKET
        value: /var/run/sysprobe/sysprobe.sock
      - name: DD_COLLECT_DNS_STATS
        value: "true"
      - name: DD_SYSTEM_PROBE_CONFIG_ENABLE_CONNTRACK
        value: "true"
      - name: DD_ORCHESTRATOR_EXPLORER_ENABLED
        value: "true"
      - name: DD_ORCHESTRATOR_EXPLORER_CONTAINER_SCRUBBING_ENABLED
        value: "true"
      - name: DD_AGENT_IPC_PORT
        value: "5009"
      - name: DD_AGENT_IPC_CONFIG_REFRESH_INTERVAL
        value: "60"
      - name: DD_OTELCOLLECTOR_ENABLED
        value: "true"
      - name: DD_PROCESS_CONFIG_PROCESS_DISCOVERY_ENABLED
        value: "true"
      - name: DD_REMOTE_CONFIGURATION_ENABLED
        value: "true"
      - name: DD_SYSTEM_PROBE_SERVICE_MONITORING_ENABLED
        value: "true"
      - name: DD_PROCESS_CONFIG_PROCESS_COLLECTION_ENABLED
        value: "true"
      - name: DD_PROCESS_AGENT_ENABLED
        value: "true"
      - name: DD_KUBELET_TLS_VERIFY
        value: "false"
      - name: DD_CONTAINER_INCLUDE
        value: name:heffner.live
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /live
          port: 5555
        initialDelaySeconds: 15
        periodSeconds: 15
        timeoutSeconds: 5
      name: agent
      ports:
      - containerPort: 8125
        name: dogstatsdport
        protocol: UDP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /ready
          port: 5555
        initialDelaySeconds: 15
        periodSeconds: 15
        timeoutSeconds: 5
      startupProbe:
        failureThreshold: 6
        httpGet:
          path: /startup
          port: 5555
        initialDelaySeconds: 15
        periodSeconds: 15
        timeoutSeconds: 5
      volumeMounts:
      - mountPath: /var/log/datadog
        name: logdatadog
      - mountPath: /etc/datadog-agent/auth
        name: datadog-agent-auth
      - mountPath: /etc/datadog-agent/install_info
        name: installinfo
        readOnly: true
        subPath: install_info
      - mountPath: /etc/datadog-agent
        name: config
      - mountPath: /host/proc
        name: procdir
        readOnly: true
      - mountPath: /host/sys/fs/cgroup
        name: cgroups
        readOnly: true
      - mountPath: /var/run/datadog
        name: dsdsocket
      - mountPath: /host/var/run
        name: runtimesocketdir
        readOnly: true
      - mountPath: /var/run/sysprobe
        name: sysprobe-socket-dir
        readOnly: true
      - mountPath: /opt/datadog-agent/run
        name: pointerdir
      - mountPath: /var/log/pods
        name: logpodpath
        readOnly: true
      - mountPath: /var/lib/docker/containers
        name: logcontainerpath
        readOnly: true
      - mountPath: /var/log/containers
        name: symlinkcontainerpath
        readOnly: true
      - mountPath: /etc/passwd
        name: passwd
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n2x6p
        readOnly: true
    - command:
      - trace-agent
      - --config=/etc/datadog-agent/datadog.yaml
      env:
      - name: DD_INSTRUMENTATION_INSTALL_ID
        value: f656f4f7-9673-410d-a246-6ce3cd25a64f
      - name: DD_INSTRUMENTATION_INSTALL_TIME
        value: "1747942833"
      - name: DD_INSTRUMENTATION_INSTALL_TYPE
        value: k8s_manual
      - name: KUBERNETES
        value: "yes"
      - name: DD_CLUSTER_AGENT_ENABLED
        value: "true"
      - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
        value: datadog-cluster-agent
      - name: DD_CLUSTER_AGENT_TOKEN_NAME
        value: datadog-token
      - name: DD_KUBERNETES_KUBELET_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      - name: DD_CLUSTER_NAME
        value: heffner.k8s
      - name: DD_SITE
        value: us5.datadoghq.com
      - name: DD_LOG_LEVEL
        value: info
      - name: DD_TAGS
        value: '["env:prod"]'
      - name: DD_APM_ENABLED
        value: "true"
      - name: DD_APM_RECEIVER_SOCKET
        value: /var/run/datadog/apm.socket
      - name: DD_CLUSTER_AGENT_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: token
            name: datadog-token
      - name: DD_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: datadog-secret
      - name: DD_DOGSTATSD_SOCKET
        value: /var/run/datadog/dsd.socket
      - name: DD_REMOTE_CONFIGURATION_ENABLED
        value: "true"
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      livenessProbe:
        initialDelaySeconds: 15
        periodSeconds: 15
        tcpSocket:
          port: 8126
        timeoutSeconds: 5
      name: trace-agent
      ports:
      - containerPort: 8126
        name: traceport
      volumeMounts:
      - mountPath: /var/log/datadog
        name: logdatadog
      - mountPath: /host/proc
        name: procdir
        readOnly: true
      - mountPath: /host/sys/fs/cgroup
        name: cgroups
        readOnly: true
      - mountPath: /etc/datadog-agent/auth
        name: datadog-agent-auth
        readOnly: true
      - mountPath: /etc/datadog-agent
        name: config
      - mountPath: /var/run/datadog
        name: apmsocket
      - mountPath: /host/var/run
        name: runtimesocketdir
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n2x6p
        readOnly: true
    - command:
      - security-agent
      - start
      - -c=/etc/datadog-agent/datadog.yaml
      env:
      - name: HOST_ROOT
        value: /host/root
      - name: KUBERNETES
        value: "yes"
      - name: DD_CLUSTER_AGENT_ENABLED
        value: "true"
      - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
        value: datadog-cluster-agent
      - name: DD_CLUSTER_AGENT_TOKEN_NAME
        value: datadog-token
      - name: DD_KUBERNETES_KUBELET_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      - name: DD_CLUSTER_NAME
        value: heffner.k8s
      - name: DD_SITE
        value: us5.datadoghq.com
      - name: DD_LOG_LEVEL
        value: info
      - name: DD_TAGS
        value: '["env:prod"]'
      - name: DD_RUNTIME_SECURITY_CONFIG_ENABLED
        value: "true"
      - name: DD_RUNTIME_SECURITY_CONFIG_SOCKET
        value: /var/run/sysprobe/runtime-security.sock
      - name: DD_CLUSTER_AGENT_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: token
            name: datadog-token
      - name: DD_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: datadog-secret
      - name: DD_DOGSTATSD_SOCKET
        value: /var/run/datadog/dsd.socket
      - name: DD_REMOTE_CONFIGURATION_ENABLED
        value: "true"
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      name: security-agent
      volumeMounts:
      - mountPath: /var/log/datadog
        name: logdatadog
      - mountPath: /etc/datadog-agent/auth
        name: datadog-agent-auth
        readOnly: true
      - mountPath: /etc/datadog-agent
        name: config
      - mountPath: /var/run/datadog
        name: dsdsocket
      - mountPath: /host/var/run
        name: runtimesocketdir
        readOnly: true
      - mountPath: /var/run/sysprobe
        name: sysprobe-socket-dir
        readOnly: true
      - mountPath: /host/root
        name: hostroot
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n2x6p
        readOnly: true
    - command:
      - system-probe
      - --config=/etc/datadog-agent/system-probe.yaml
      env:
      - name: KUBERNETES
        value: "yes"
      - name: DD_CLUSTER_AGENT_ENABLED
        value: "true"
      - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
        value: datadog-cluster-agent
      - name: DD_CLUSTER_AGENT_TOKEN_NAME
        value: datadog-token
      - name: DD_KUBERNETES_KUBELET_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      - name: DD_CLUSTER_NAME
        value: heffner.k8s
      - name: DD_SITE
        value: us5.datadoghq.com
      - name: DD_LOG_LEVEL
        value: info
      - name: DD_TAGS
        value: '["env:prod"]'
      - name: DD_RUNTIME_SECURITY_CONFIG_ENABLED
        value: "true"
      - name: DD_RUNTIME_SECURITY_CONFIG_SOCKET
        value: /var/run/sysprobe/runtime-security.sock
      - name: DD_RUNTIME_SECURITY_CONFIG_NETWORK_ENABLED
        value: "true"
      - name: DD_RUNTIME_SECURITY_CONFIG_ACTIVITY_DUMP_ENABLED
        value: "true"
      - name: DD_RUNTIME_SECURITY_CONFIG_REMOTE_CONFIGURATION_ENABLED
        value: "true"
      - name: DD_RUNTIME_SECURITY_CONFIG_POLICIES_DIR
        value: /etc/datadog-agent/runtime-security.d
      - name: DD_CLUSTER_AGENT_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: token
            name: datadog-token
      - name: DD_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: datadog-secret
      - name: DD_DOGSTATSD_SOCKET
        value: /var/run/datadog/dsd.socket
      - name: DD_SYSTEM_PROBE_NETWORK_ENABLED
        value: "true"
      - name: DD_SYSTEM_PROBE_ENABLED
        value: "true"
      - name: DD_SYSPROBE_SOCKET
        value: /var/run/sysprobe/sysprobe.sock
      - name: DD_COLLECT_DNS_STATS
        value: "true"
      - name: DD_SYSTEM_PROBE_CONFIG_ENABLE_CONNTRACK
        value: "true"
      - name: DD_REMOTE_CONFIGURATION_ENABLED
        value: "true"
      - name: DD_SYSTEM_PROBE_SERVICE_MONITORING_ENABLED
        value: "true"
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      name: system-probe
      securityContext:
        appArmorProfile:
          type: Unconfined
        capabilities:
          add:
          - CHOWN
          - DAC_READ_SEARCH
          - IPC_LOCK
          - NET_ADMIN
          - NET_BROADCAST
          - NET_RAW
          - SYS_ADMIN
          - SYS_PTRACE
          - SYS_RESOURCE
        seccompProfile:
          localhostProfile: system-probe
          type: Localhost
      volumeMounts:
      - mountPath: /var/log/datadog
        name: logdatadog
      - mountPath: /etc/datadog-agent/auth
        name: datadog-agent-auth
        readOnly: true
      - mountPath: /etc/datadog-agent
        name: config
      - mountPath: /sys/kernel/debug
        name: debugfs
      - mountPath: /sys/kernel/tracing
        name: tracefs
      - mountPath: /host/sys/kernel/security
        name: securityfs
        readOnly: true
      - mountPath: /var/run/sysprobe
        name: sysprobe-socket-dir
      - mountPath: /host/proc
        name: procdir
        readOnly: true
      - mountPath: /etc/passwd
        name: passwd
        readOnly: true
      - mountPath: /etc/group
        name: group
        readOnly: true
      - mountPath: /host/etc/os-release
        name: host-osrelease
        readOnly: true
      - mountPath: /host/sys/fs/cgroup
        name: cgroups
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n2x6p
        readOnly: true
    - command:
      - process-agent
      - --config=/etc/datadog-agent/datadog.yaml
      - --sysprobe-config=/etc/datadog-agent/system-probe.yaml
      env:
      - name: KUBERNETES
        value: "yes"
      - name: DD_CLUSTER_AGENT_ENABLED
        value: "true"
      - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
        value: datadog-cluster-agent
      - name: DD_CLUSTER_AGENT_TOKEN_NAME
        value: datadog-token
      - name: DD_KUBERNETES_KUBELET_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      - name: DD_CLUSTER_NAME
        value: heffner.k8s
      - name: DD_SITE
        value: us5.datadoghq.com
      - name: DD_LOG_LEVEL
        value: info
      - name: DD_TAGS
        value: '["env:prod"]'
      - name: DD_LANGUAGE_DETECTION_ENABLED
        value: "true"
      - name: DD_PROCESS_CONFIG_RUN_IN_CORE_AGENT_ENABLED
        value: "true"
      - name: DD_CLUSTER_AGENT_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: token
            name: datadog-token
      - name: DD_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: datadog-secret
      - name: DD_DOGSTATSD_SOCKET
        value: /var/run/datadog/dsd.socket
      - name: DD_SYSTEM_PROBE_NETWORK_ENABLED
        value: "true"
      - name: DD_SYSTEM_PROBE_ENABLED
        value: "true"
      - name: DD_SYSPROBE_SOCKET
        value: /var/run/sysprobe/sysprobe.sock
      - name: DD_SYSTEM_PROBE_EXTERNAL
        value: "true"
      - name: DD_REMOTE_CONFIGURATION_ENABLED
        value: "true"
      - name: DD_SYSTEM_PROBE_SERVICE_MONITORING_ENABLED
        value: "true"
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      name: process-agent
      volumeMounts:
      - mountPath: /var/log/datadog
        name: logdatadog
      - mountPath: /etc/datadog-agent/auth
        name: datadog-agent-auth
        readOnly: true
      - mountPath: /etc/datadog-agent
        name: config
      - mountPath: /var/run/datadog
        name: dsdsocket
      - mountPath: /host/var/run
        name: runtimesocketdir
        readOnly: true
      - mountPath: /host/proc
        name: procdir
        readOnly: true
      - mountPath: /host/sys/fs/cgroup
        name: cgroups
        readOnly: true
      - mountPath: /sys/kernel/debug
        name: debugfs
      - mountPath: /var/run/sysprobe
        name: sysprobe-socket-dir
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n2x6p
        readOnly: true
    - command:
      - otel-agent
      - --config=/etc/datadog-agent/otel-config.yaml
      - --core-config=/etc/datadog-agent/datadog.yaml
      - --sync-delay=30s
      env:
      - name: DD_CLUSTER_NAME
        value: heffner.k8s
      - name: DD_SITE
        value: us5.datadoghq.com
      - name: DD_LOG_LEVEL
        value: info
      - name: DD_TAGS
        value: '["env:prod"]'
      - name: DD_CLUSTER_AGENT_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: token
            name: datadog-token
      - name: DD_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: datadog-secret
      - name: DD_DOGSTATSD_SOCKET
        value: /var/run/datadog/dsd.socket
      - name: DD_AGENT_IPC_PORT
        value: "5009"
      - name: DD_AGENT_IPC_CONFIG_REFRESH_INTERVAL
        value: "60"
      - name: DD_REMOTE_CONFIGURATION_ENABLED
        value: "true"
      - name: DD_OTELCOLLECTOR_ENABLED
        value: "true"
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      name: otel-agent
      ports:
      - containerPort: 4317
        hostPort: 4317
        name: otel-grpc
      - containerPort: 4318
        hostPort: 4318
        name: otel-http
      volumeMounts:
      - mountPath: /var/log/datadog
        name: logdatadog
      - mountPath: /etc/datadog-agent
        name: config
      - mountPath: /etc/datadog-agent/auth
        name: datadog-agent-auth
        readOnly: true
      - mountPath: /etc/datadog-agent/otel-config.yaml
        name: otel-agent-config-volume
        readOnly: true
        subPath: otel-config.yaml
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n2x6p
        readOnly: true
    initContainers:
    - args:
      - cp -vnr /etc/datadog-agent /opt
      command:
      - bash
      - -c
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      name: init-volume
      volumeMounts:
      - mountPath: /opt/datadog-agent
        name: config
      - mountPath: /var/log/nginx
        name: nginx-logs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n2x6p
        readOnly: true
    - args:
      - for script in $(find /etc/cont-init.d/ -type f -name '*.sh' | sort) ; do bash
        $script ; done
      command:
      - bash
      - -c
      env:
      - name: DD_HEALTH_PORT
        value: "5555"
      - name: DD_CONTAINER_IMAGE_ENABLED
        value: "true"
      - name: KUBERNETES
        value: "yes"
      - name: DD_CLUSTER_AGENT_ENABLED
        value: "true"
      - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
        value: datadog-cluster-agent
      - name: DD_CLUSTER_AGENT_TOKEN_NAME
        value: datadog-token
      - name: DD_KUBERNETES_KUBELET_HOST
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      name: init-config
      volumeMounts:
      - mountPath: /var/log/datadog
        name: logdatadog
      - mountPath: /checks.d
        name: checksd
        readOnly: true
      - mountPath: /etc/datadog-agent/auth
        name: datadog-agent-auth
      - mountPath: /conf.d
        name: confd
        readOnly: true
      - mountPath: /etc/datadog-agent
        name: config
      - mountPath: /host/proc
        name: procdir
        readOnly: true
      - mountPath: /host/var/run
        name: runtimesocketdir
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n2x6p
        readOnly: true
    - command:
      - cp
      - /etc/config/system-probe-seccomp.json
      - /host/var/lib/kubelet/seccomp/system-probe
      image: gcr.io/datadoghq/agent:latest-full
      imagePullPolicy: Always
      name: seccomp-setup
      volumeMounts:
      - mountPath: /etc/config
        name: datadog-agent-security
      - mountPath: /host/var/lib/kubelet/seccomp
        name: seccomp-root
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n2x6p
        readOnly: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    securityContext:
      runAsUser: 0
    serviceAccountName: datadog-agent
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/log/nginx
        type: DirectoryOrCreate
      name: nginx-logs
    - name: logdatadog
    - name: datadog-agent-auth
    - configMap:
        name: datadog-install-info
      name: installinfo
    - name: checksd
    - name: confd
    - name: config
    - hostPath:
        path: /proc
      name: procdir
    - hostPath:
        path: /sys/fs/cgroup
      name: cgroups
    - hostPath:
        path: /var/run/datadog
        type: DirectoryOrCreate
      name: dsdsocket
    - hostPath:
        path: /var/run
      name: runtimesocketdir
    - configMap:
        name: datadog-system-probe-seccomp
      name: datadog-agent-security
    - hostPath:
        path: /var/lib/kubelet/seccomp
      name: seccomp-root
    - hostPath:
        path: /var/run/datadog
        type: DirectoryOrCreate
      name: apmsocket
    - hostPath:
        path: /sys/kernel/debug
      name: debugfs
    - hostPath:
        path: /sys/kernel/tracing
      name: tracefs
    - hostPath:
        path: /sys/kernel/security
      name: securityfs
    - name: sysprobe-socket-dir
    - hostPath:
        path: /etc/passwd
      name: passwd
    - hostPath:
        path: /etc/group
      name: group
    - hostPath:
        path: /etc/os-release
      name: host-osrelease
    - hostPath:
        path: /
      name: hostroot
    - hostPath:
        path: /var/lib/datadog-agent/logs
      name: pointerdir
    - hostPath:
        path: /var/log/pods
      name: logpodpath
    - hostPath:
        path: /var/lib/docker/containers
      name: logcontainerpath
    - hostPath:
        path: /var/log/containers
      name: symlinkcontainerpath
    - configMap:
        name: datadog-otel-agent-config
      name: otel-agent-config-volume
    - name: kube-api-access-n2x6p
      projected:
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/cluster_checks-custom-config: f7dc31a1080204b2a0f72ea0cc314033
      checksum/default-custom-config: dd51953a8d3959ab0339bd9777452024
    labels:
      agent.datadoghq.com/component: cluster-agent
      agent.datadoghq.com/name: datadog
      app.kubernetes.io/component: cluster-agent
      app.kubernetes.io/instance: datadog-cluster-agent
      app.kubernetes.io/managed-by: datadog-operator
      app.kubernetes.io/name: datadog-agent-deployment
      app.kubernetes.io/part-of: default-datadog
      app.kubernetes.io/version: ""
      pod-template-hash: 9b69799bd
    name: datadog-cluster-agent-9b69799bd-lslfn
    namespace: default
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                agent.datadoghq.com/component: cluster-agent
            topologyKey: kubernetes.io/hostname
          weight: 50
    containers:
    - env:
      - name: DD_POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
        value: datadog-cluster-agent
      - name: DD_KUBE_RESOURCES_NAMESPACE
        value: default
      - name: DD_LEADER_ELECTION
        value: "true"
      - name: DD_HEALTH_PORT
        value: "5555"
      - name: DD_INSTRUMENTATION_INSTALL_ID
        value: f656f4f7-9673-410d-a246-6ce3cd25a64f
      - name: DD_INSTRUMENTATION_INSTALL_TIME
        value: "1747942833"
      - name: DD_INSTRUMENTATION_INSTALL_TYPE
        value: k8s_manual
      - name: DD_AUTH_TOKEN_FILE_PATH
        value: /etc/datadog-agent/auth/token
      - name: DD_CLUSTER_NAME
        value: heffner.k8s
      - name: DD_SITE
        value: us5.datadoghq.com
      - name: DD_LOG_LEVEL
        value: info
      - name: DD_TAGS
        value: '["env:prod"]'
      - name: DD_ADMISSION_CONTROLLER_ENABLED
        value: "true"
      - name: DD_ADMISSION_CONTROLLER_VALIDATION_ENABLED
        value: "true"
      - name: DD_ADMISSION_CONTROLLER_MUTATION_ENABLED
        value: "true"
      - name: DD_ADMISSION_CONTROLLER_MUTATE_UNLABELLED
        value: "false"
      - name: DD_ADMISSION_CONTROLLER_CONTAINER_REGISTRY
        value: gcr.io/datadoghq
      - name: DD_ADMISSION_CONTROLLER_SERVICE_NAME
        value: datadog-admission-controller
      - name: DD_ADMISSION_CONTROLLER_INJECT_CONFIG_MODE
        value: socket
      - name: DD_ADMISSION_CONTROLLER_INJECT_CONFIG_LOCAL_SERVICE_NAME
        value: datadog-agent
      - name: DD_ADMISSION_CONTROLLER_WEBHOOK_NAME
        value: datadog-webhook
      - name: DD_APM_INSTRUMENTATION_ENABLED
        value: "true"
      - name: DD_LANGUAGE_DETECTION_ENABLED
        value: "true"
      - name: DD_APM_INSTRUMENTATION_TARGETS
        value: '[{"name":"default-target","ddTraceVersions":{"dotnet":"3","java":"1","js":"5","php":"1","python":"3"}}]'
      - name: DD_ADMISSION_CONTROLLER_AUTO_INSTRUMENTATION_APPSEC_ENABLED
        value: "true"
      - name: DD_CLUSTER_CHECKS_ENABLED
        value: "true"
      - name: DD_EXTRA_CONFIG_PROVIDERS
        value: kube_services kube_endpoints
      - name: DD_EXTRA_LISTENERS
        value: kube_services kube_endpoints
      - name: DD_CLUSTER_AGENT_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            key: token
            name: datadog-token
      - name: DD_API_KEY
        valueFrom:
          secretKeyRef:
            key: api-key
            name: datadog-secret
      - name: DD_CLUSTER_AGENT_SERVICE_ACCOUNT_NAME
        value: datadog-cluster-agent
      - name: AGENT_DAEMONSET
        value: datadog-agent
      - name: CLUSTER_AGENT_DEPLOYMENT
        value: datadog-cluster-agent
      - name: DATADOGAGENT_CR_NAME
        value: datadog
      - name: DD_COLLECT_KUBERNETES_EVENTS
        value: "true"
      - name: DD_LEADER_LEASE_NAME
        value: datadog-leader-election
      - name: DD_CLUSTER_AGENT_TOKEN_NAME
        value: datadog-token
      - name: DD_KUBE_STATE_METRICS_CORE_ENABLED
        value: "true"
      - name: DD_KUBE_STATE_METRICS_CORE_CONFIGMAP_NAME
        value: datadog-kube-state-metrics-core-config
      - name: DD_ORCHESTRATOR_EXPLORER_ENABLED
        value: "true"
      - name: DD_ORCHESTRATOR_EXPLORER_CONTAINER_SCRUBBING_ENABLED
        value: "true"
      - name: DD_REMOTE_CONFIGURATION_ENABLED
        value: "true"
      image: gcr.io/datadoghq/cluster-agent:7.64.3
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /live
          port: 5555
        initialDelaySeconds: 15
        periodSeconds: 15
        timeoutSeconds: 5
      name: cluster-agent
      ports:
      - containerPort: 5005
        name: agentport
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /ready
          port: 5555
        initialDelaySeconds: 15
        periodSeconds: 15
        timeoutSeconds: 5
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
      startupProbe:
        failureThreshold: 6
        httpGet:
          path: /startup
          port: 5555
        initialDelaySeconds: 15
        periodSeconds: 15
        timeoutSeconds: 5
      volumeMounts:
      - mountPath: /etc/datadog-agent/install_info
        name: installinfo
        readOnly: true
        subPath: install_info
      - mountPath: /conf.d
        name: confd
        readOnly: true
      - mountPath: /var/log/datadog
        name: logdatadog
      - mountPath: /etc/datadog-agent/certificates
        name: certificates
      - mountPath: /etc/datadog-agent/auth
        name: datadog-agent-auth
      - mountPath: /tmp
        name: tmp
      - mountPath: /etc/datadog-agent/conf.d/kubernetes_state_core.d
        name: ksm-core-config
        readOnly: true
      - mountPath: /etc/datadog-agent/conf.d/orchestrator.d
        name: orchestrator-explorer-config
        readOnly: true
      - mountPath: /opt/datadog-agent/run/
        name: datadogrun
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nmpzl
        readOnly: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    serviceAccountName: datadog-cluster-agent
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        name: datadog-install-info
      name: installinfo
    - name: confd
    - name: logdatadog
    - name: certificates
    - name: datadog-agent-auth
    - name: tmp
    - configMap:
        name: datadog-kube-state-metrics-core-config
      name: ksm-core-config
    - configMap:
        name: datadog-orchestrator-explorer-config
      name: orchestrator-explorer-config
    - name: datadogrun
    - name: kube-api-access-nmpzl
      projected:
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      ad.datadoghq.com/datadog-operator.check_names: '["openmetrics"]'
      ad.datadoghq.com/datadog-operator.init_configs: '[{}]'
      ad.datadoghq.com/datadog-operator.instances: |
        [{
          "prometheus_url": "http://%%host%%:8383/metrics",
          "namespace": "datadog.operator",
          "metrics": ["*"]
        }]
    labels:
      app.kubernetes.io/instance: datadog-operator
      app.kubernetes.io/name: datadog-operator
      pod-template-hash: 6dc6d8d44c
    name: datadog-operator-6dc6d8d44c-n7cmg
    namespace: default
  spec:
    containers:
    - args:
      - -supportExtendedDaemonset=false
      - -logEncoder=json
      - -metrics-addr=:8383
      - -loglevel=info
      - -operatorMetricsEnabled=true
      - -introspectionEnabled=false
      - -datadogAgentProfileEnabled=false
      - -datadogMonitorEnabled=false
      - -datadogAgentEnabled=true
      - -datadogSLOEnabled=false
      - -datadogDashboardEnabled=false
      - -datadogGenericResourceEnabled=false
      - -remoteConfigEnabled=false
      env:
      - name: WATCH_NAMESPACE
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
      - name: POD_NAME
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: DD_TOOL_VERSION
        value: helm
      - name: DD_CLUSTER_NAME
        value: heffner.k8s
      image: gcr.io/datadoghq/operator:1.14.0
      livenessProbe:
        httpGet:
          path: /healthz/
          port: 8081
      name: datadog-operator
      ports:
      - containerPort: 8383
        name: metrics
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-skg2n
        readOnly: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    serviceAccountName: datadog-operator
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-skg2n
      projected:
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      ad.datadoghq.com/fail2ban.logs: |
        [
          {
            "source": "fail2ban",
            "service": "nginx-web",
            "type": "file",
            "path": "/var/log/fail2ban.log"
          }
        ]
      ad.datadoghq.com/nginx.checks: |
        {
          "nginx": {
            "init_config": {},
            "instances": [
              {
                "nginx_status_url": "http://%%host%%:81/nginx_status/"
              }
            ]
          }
        }
      ad.datadoghq.com/nginx.logs: |
        [
          {
            "source": "nginx",
            "service": "nginx-web",
            "type": "file",
            "path": "/var/log/nginx/access.log"
          }
        ]
      kubectl.kubernetes.io/restartedAt: "2025-05-22T18:02:39-04:00"
    labels:
      app: nginx-web
      pod-template-hash: 7f97754dd
    name: nginx-web-7f97754dd-42jlh
    namespace: default
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: node-role.kubernetes.io/control-plane
              operator: DoesNotExist
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app: nginx-web
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - env:
      - name: DEPLOY_DATE
        value: Fri May 24 01:22:17 PM EDT 2024
      - name: STAKATER_WWW_CONFIGMAP_CONFIGMAP
        value: c1a627beae5dca1bb899251e31a22aba5e780b17
      - name: STAKATER_NGINX_CONFIG_CONFIGMAP
        value: f08151630a688fb09bc94d87d4dc9ec8a4b3aa72
      image: technotuba/nginx:v2025.5.10
      name: nginx
      ports:
      - containerPort: 80
      - containerPort: 81
      resources:
        requests:
          cpu: 100m
      volumeMounts:
      - mountPath: /etc/fail2ban/action.d/cloudflare-ban.conf
        name: fail2ban-config-cloudflare
        subPath: cloudflare-ban.conf
      - mountPath: /usr/share/nginx/html
        name: www-volume
      - mountPath: /etc/nginx/nginx.conf
        name: config-volume
        subPath: nginx.conf
      - mountPath: /usr/share/nginx/html/image
        name: images-volume
      - mountPath: /etc/nginx/conf.d/status.conf
        name: config
        readOnly: true
        subPath: status.conf
      - mountPath: /var/log/nginx
        name: nginx-logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7tfgb
        readOnly: true
    - env:
      - name: TZ
        value: America/New_York
      image: crazymax/fail2ban:latest
      name: fail2ban
      resources:
        requests:
          cpu: 1m
      securityContext:
        privileged: true
      volumeMounts:
      - mountPath: /etc/fail2ban/action.d/cloudflare-ban.conf
        name: fail2ban-config-cloudflare
        subPath: cloudflare-ban.conf
      - mountPath: /etc/cloudflare
        name: cloudflare-creds
      - mountPath: /usr/local/bin/fail2ban-cloudflare-ban.sh
        name: ban-script
        subPath: fail2ban-cloudflare-ban.sh
      - mountPath: /etc/fail2ban/fail2ban.conf
        name: fail2ban-main-config
        subPath: fail2ban.conf
      - mountPath: /etc/fail2ban/jail.local
        name: fail2ban-config
        subPath: jail.local
      - mountPath: /etc/fail2ban/filter.d/nginx-404.conf
        name: fail2ban-config
        subPath: nginx-404.conf
      - mountPath: /var/log/nginx
        name: nginx-logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7tfgb
        readOnly: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    serviceAccountName: default
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/log/nginx
        type: DirectoryOrCreate
      name: nginx-logs
    - configMap:
        name: fail2ban-config
      name: fail2ban-config-cloudflare
    - configMap:
        defaultMode: 493
        name: fail2ban-cloudflare-ban-script
      name: ban-script
    - name: cloudflare-creds
      secret:
        secretName: cloudflare-creds
    - configMap:
        name: fail2ban-main-config
      name: fail2ban-main-config
    - configMap:
        name: nginx-config
      name: config
    - configMap:
        name: fail2ban-config
      name: fail2ban-config
    - configMap:
        name: www-configmap
      name: www-volume
    - configMap:
        name: nginx-config
      name: config-volume
    - hostPath:
        path: /home/huey/www/images
        type: Directory
      name: images-volume
    - name: kube-api-access-7tfgb
      projected:
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      ad.datadoghq.com/fail2ban.logs: |
        [
          {
            "source": "fail2ban",
            "service": "nginx-web",
            "type": "file",
            "path": "/var/log/fail2ban.log"
          }
        ]
      ad.datadoghq.com/nginx.checks: |
        {
          "nginx": {
            "init_config": {},
            "instances": [
              {
                "nginx_status_url": "http://%%host%%:81/nginx_status/"
              }
            ]
          }
        }
      ad.datadoghq.com/nginx.logs: |
        [
          {
            "source": "nginx",
            "service": "nginx-web",
            "type": "file",
            "path": "/var/log/nginx/access.log"
          }
        ]
      kubectl.kubernetes.io/restartedAt: "2025-05-22T18:02:39-04:00"
    labels:
      app: nginx-web
      pod-template-hash: 7f97754dd
    name: nginx-web-7f97754dd-fj4gv
    namespace: default
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: node-role.kubernetes.io/control-plane
              operator: DoesNotExist
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app: nginx-web
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - env:
      - name: DEPLOY_DATE
        value: Fri May 24 01:22:17 PM EDT 2024
      - name: STAKATER_WWW_CONFIGMAP_CONFIGMAP
        value: c1a627beae5dca1bb899251e31a22aba5e780b17
      - name: STAKATER_NGINX_CONFIG_CONFIGMAP
        value: f08151630a688fb09bc94d87d4dc9ec8a4b3aa72
      image: technotuba/nginx:v2025.5.10
      name: nginx
      ports:
      - containerPort: 80
      - containerPort: 81
      resources:
        requests:
          cpu: 100m
      volumeMounts:
      - mountPath: /etc/fail2ban/action.d/cloudflare-ban.conf
        name: fail2ban-config-cloudflare
        subPath: cloudflare-ban.conf
      - mountPath: /usr/share/nginx/html
        name: www-volume
      - mountPath: /etc/nginx/nginx.conf
        name: config-volume
        subPath: nginx.conf
      - mountPath: /usr/share/nginx/html/image
        name: images-volume
      - mountPath: /etc/nginx/conf.d/status.conf
        name: config
        readOnly: true
        subPath: status.conf
      - mountPath: /var/log/nginx
        name: nginx-logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dsrww
        readOnly: true
    - env:
      - name: TZ
        value: America/New_York
      image: crazymax/fail2ban:latest
      name: fail2ban
      resources:
        requests:
          cpu: 1m
      securityContext:
        privileged: true
      volumeMounts:
      - mountPath: /etc/fail2ban/action.d/cloudflare-ban.conf
        name: fail2ban-config-cloudflare
        subPath: cloudflare-ban.conf
      - mountPath: /etc/cloudflare
        name: cloudflare-creds
      - mountPath: /usr/local/bin/fail2ban-cloudflare-ban.sh
        name: ban-script
        subPath: fail2ban-cloudflare-ban.sh
      - mountPath: /etc/fail2ban/fail2ban.conf
        name: fail2ban-main-config
        subPath: fail2ban.conf
      - mountPath: /etc/fail2ban/jail.local
        name: fail2ban-config
        subPath: jail.local
      - mountPath: /etc/fail2ban/filter.d/nginx-404.conf
        name: fail2ban-config
        subPath: nginx-404.conf
      - mountPath: /var/log/nginx
        name: nginx-logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dsrww
        readOnly: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    serviceAccountName: default
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/log/nginx
        type: DirectoryOrCreate
      name: nginx-logs
    - configMap:
        name: fail2ban-config
      name: fail2ban-config-cloudflare
    - configMap:
        defaultMode: 493
        name: fail2ban-cloudflare-ban-script
      name: ban-script
    - name: cloudflare-creds
      secret:
        secretName: cloudflare-creds
    - configMap:
        name: fail2ban-main-config
      name: fail2ban-main-config
    - configMap:
        name: nginx-config
      name: config
    - configMap:
        name: fail2ban-config
      name: fail2ban-config
    - configMap:
        name: www-configmap
      name: www-volume
    - configMap:
        name: nginx-config
      name: config-volume
    - hostPath:
        path: /home/huey/www/images
        type: Directory
      name: images-volume
    - name: kube-api-access-dsrww
      projected:
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      ad.datadoghq.com/fail2ban.logs: |
        [
          {
            "source": "fail2ban",
            "service": "nginx-web",
            "type": "file",
            "path": "/var/log/fail2ban.log"
          }
        ]
      ad.datadoghq.com/nginx.checks: |
        {
          "nginx": {
            "init_config": {},
            "instances": [
              {
                "nginx_status_url": "http://%%host%%:81/nginx_status/"
              }
            ]
          }
        }
      ad.datadoghq.com/nginx.logs: |
        [
          {
            "source": "nginx",
            "service": "nginx-web",
            "type": "file",
            "path": "/var/log/nginx/access.log"
          }
        ]
      kubectl.kubernetes.io/restartedAt: "2025-05-22T18:02:39-04:00"
    labels:
      app: nginx-web
      pod-template-hash: 7f97754dd
    name: nginx-web-7f97754dd-ld7mz
    namespace: default
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: node-role.kubernetes.io/control-plane
              operator: DoesNotExist
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app: nginx-web
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - env:
      - name: DEPLOY_DATE
        value: Fri May 24 01:22:17 PM EDT 2024
      - name: STAKATER_WWW_CONFIGMAP_CONFIGMAP
        value: c1a627beae5dca1bb899251e31a22aba5e780b17
      - name: STAKATER_NGINX_CONFIG_CONFIGMAP
        value: f08151630a688fb09bc94d87d4dc9ec8a4b3aa72
      image: technotuba/nginx:v2025.5.10
      name: nginx
      ports:
      - containerPort: 80
      - containerPort: 81
      resources:
        requests:
          cpu: 100m
      volumeMounts:
      - mountPath: /etc/fail2ban/action.d/cloudflare-ban.conf
        name: fail2ban-config-cloudflare
        subPath: cloudflare-ban.conf
      - mountPath: /usr/share/nginx/html
        name: www-volume
      - mountPath: /etc/nginx/nginx.conf
        name: config-volume
        subPath: nginx.conf
      - mountPath: /usr/share/nginx/html/image
        name: images-volume
      - mountPath: /etc/nginx/conf.d/status.conf
        name: config
        readOnly: true
        subPath: status.conf
      - mountPath: /var/log/nginx
        name: nginx-logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-t87mb
        readOnly: true
    - env:
      - name: TZ
        value: America/New_York
      image: crazymax/fail2ban:latest
      name: fail2ban
      resources:
        requests:
          cpu: 1m
      securityContext:
        privileged: true
      volumeMounts:
      - mountPath: /etc/fail2ban/action.d/cloudflare-ban.conf
        name: fail2ban-config-cloudflare
        subPath: cloudflare-ban.conf
      - mountPath: /etc/cloudflare
        name: cloudflare-creds
      - mountPath: /usr/local/bin/fail2ban-cloudflare-ban.sh
        name: ban-script
        subPath: fail2ban-cloudflare-ban.sh
      - mountPath: /etc/fail2ban/fail2ban.conf
        name: fail2ban-main-config
        subPath: fail2ban.conf
      - mountPath: /etc/fail2ban/jail.local
        name: fail2ban-config
        subPath: jail.local
      - mountPath: /etc/fail2ban/filter.d/nginx-404.conf
        name: fail2ban-config
        subPath: nginx-404.conf
      - mountPath: /var/log/nginx
        name: nginx-logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-t87mb
        readOnly: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    serviceAccountName: default
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/log/nginx
        type: DirectoryOrCreate
      name: nginx-logs
    - configMap:
        name: fail2ban-config
      name: fail2ban-config-cloudflare
    - configMap:
        defaultMode: 493
        name: fail2ban-cloudflare-ban-script
      name: ban-script
    - name: cloudflare-creds
      secret:
        secretName: cloudflare-creds
    - configMap:
        name: fail2ban-main-config
      name: fail2ban-main-config
    - configMap:
        name: nginx-config
      name: config
    - configMap:
        name: fail2ban-config
      name: fail2ban-config
    - configMap:
        name: www-configmap
      name: www-volume
    - configMap:
        name: nginx-config
      name: config-volume
    - hostPath:
        path: /home/huey/www/images
        type: Directory
      name: images-volume
    - name: kube-api-access-t87mb
      projected:
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app.kubernetes.io/instance: datadog
      app.kubernetes.io/managed-by: datadog-operator
      app.kubernetes.io/name: datadog-agent-deployment
      app.kubernetes.io/part-of: default-datadog
      app.kubernetes.io/version: ""
      operator.datadoghq.com/managed-by-store: "true"
    name: datadog-admission-controller
    namespace: default
  spec:
    clusterIP: 10.111.152.166
    clusterIPs:
    - 10.111.152.166
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: admissioncontrollerport
      port: 443
      targetPort: 8000
    selector:
      agent.datadoghq.com/component: cluster-agent
      agent.datadoghq.com/name: datadog
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app.kubernetes.io/instance: datadog
      app.kubernetes.io/managed-by: datadog-operator
      app.kubernetes.io/name: datadog-agent-deployment
      app.kubernetes.io/part-of: default-datadog
      app.kubernetes.io/version: ""
      operator.datadoghq.com/managed-by-store: "true"
    name: datadog-agent
    namespace: default
  spec:
    clusterIP: 10.99.100.222
    clusterIPs:
    - 10.99.100.222
    internalTrafficPolicy: Local
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: traceport
      port: 8126
    - name: dogstatsdport
      port: 8125
      protocol: UDP
    selector:
      agent.datadoghq.com/component: agent
      app.kubernetes.io/part-of: default-datadog
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      agent.datadoghq.com/agentspechash: 851ccfd3ab6d7901085d950ce17aca5f
    labels:
      app.kubernetes.io/instance: datadog
      app.kubernetes.io/managed-by: datadog-operator
      app.kubernetes.io/name: datadog-agent-deployment
      app.kubernetes.io/part-of: default-datadog
      app.kubernetes.io/version: ""
      operator.datadoghq.com/managed-by-store: "true"
    name: datadog-cluster-agent
    namespace: default
  spec:
    clusterIP: 10.100.85.187
    clusterIPs:
    - 10.100.85.187
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 5005
    selector:
      agent.datadoghq.com/component: cluster-agent
      agent.datadoghq.com/name: datadog
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
  spec:
    clusterIP: 10.96.0.1
    clusterIPs:
    - 10.96.0.1
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      targetPort: 6443
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: nginx-web
      k8slens-edit-resource-version: v1
    name: nginx-service
    namespace: default
  spec:
    clusterIP: 10.100.221.5
    clusterIPs:
    - 10.100.221.5
    externalTrafficPolicy: Local
    healthCheckNodePort: 31887
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      nodePort: 32535
      port: 80
    - name: nginx-status
      nodePort: 30727
      port: 81
    selector:
      app: nginx-web
    type: LoadBalancer
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: prometheus-operator
      app.kubernetes.io/version: v0.38.3
    name: prometheus-operator
    namespace: default
  spec:
    clusterIP: None
    clusterIPs:
    - None
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8080
      targetPort: http
    selector:
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: prometheus-operator
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    name: cleaner-pod
    namespace: default
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        name: cleaner-pod
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: cleaner-pod
      spec:
        containers:
        - command:
          - /bin/sh
          - -c
          - |
            while true; do
              now=$(date +%d)
              if [ "$now" = "01" ]; then
                rm -f /host/var/log/nginx/access.log /host/var/log/nginx/error.log
                sleep 86400
              else
                sleep 3600
              fi
            done
          image: busybox
          imagePullPolicy: Always
          name: cleanup-pod
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/var/log/nginx
            name: host-logs
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /var/log/nginx
            type: Directory
          name: host-logs
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      agent.datadoghq.com/agentspechash: 34be3d484d5ec849343a3ba06d8de501
      deprecated.daemonset.template.generation: "25"
    labels:
      agent.datadoghq.com/component: agent
      agent.datadoghq.com/name: datadog
      agent.datadoghq.com/provider: ""
      app.kubernetes.io/component: agent
      app.kubernetes.io/instance: datadog-agent
      app.kubernetes.io/managed-by: datadog-operator
      app.kubernetes.io/name: datadog-agent-deployment
      app.kubernetes.io/part-of: default-datadog
      app.kubernetes.io/version: ""
      k8slens-edit-resource-version: v1
    name: datadog-agent
    namespace: default
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        agent.datadoghq.com/component: agent
        agent.datadoghq.com/name: datadog
    template:
      metadata:
        annotations:
          checksum/default-custom-config: dd51953a8d3959ab0339bd9777452024
          checksum/otel_agent-custom-config: c609e2fb7352676a67f0423b58970d43
          container.apparmor.security.beta.kubernetes.io/system-probe: unconfined
        creationTimestamp: null
        labels:
          agent.datadoghq.com/component: agent
          agent.datadoghq.com/name: datadog
          agent.datadoghq.com/provider: ""
          app.kubernetes.io/component: agent
          app.kubernetes.io/instance: datadog-agent
          app.kubernetes.io/managed-by: datadog-operator
          app.kubernetes.io/name: datadog-agent-deployment
          app.kubernetes.io/part-of: default-datadog
          app.kubernetes.io/version: ""
      spec:
        containers:
        - command:
          - agent
          - run
          env:
          - name: DD_HEALTH_PORT
            value: "5555"
          - name: DD_CONTAINER_IMAGE_ENABLED
            value: "true"
          - name: KUBERNETES
            value: "yes"
          - name: DD_CLUSTER_AGENT_ENABLED
            value: "true"
          - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
            value: datadog-cluster-agent
          - name: DD_CLUSTER_AGENT_TOKEN_NAME
            value: datadog-token
          - name: DD_KUBERNETES_KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: DD_CLUSTER_NAME
            value: heffner.k8s
          - name: DD_SITE
            value: us5.datadoghq.com
          - name: DD_LOG_LEVEL
            value: info
          - name: DD_TAGS
            value: '["env:prod"]'
          - name: DD_LANGUAGE_DETECTION_ENABLED
            value: "true"
          - name: DD_PROCESS_CONFIG_RUN_IN_CORE_AGENT_ENABLED
            value: "true"
          - name: DD_EXTRA_CONFIG_PROVIDERS
            value: clusterchecks endpointschecks
          - name: DD_RUNTIME_SECURITY_CONFIG_ENABLED
            value: "true"
          - name: DD_RUNTIME_SECURITY_CONFIG_SOCKET
            value: /var/run/sysprobe/runtime-security.sock
          - name: DD_CLUSTER_AGENT_AUTH_TOKEN
            valueFrom:
              secretKeyRef:
                key: token
                name: datadog-token
          - name: DD_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: datadog-secret
          - name: DD_DOGSTATSD_SOCKET
            value: /var/run/datadog/dsd.socket
          - name: DD_IGNORE_AUTOCONF
            value: kubernetes_state
          - name: DD_PROCESS_CONFIG_CONTAINER_COLLECTION_ENABLED
            value: "true"
          - name: DD_LOGS_ENABLED
            value: "true"
          - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
            value: "true"
          - name: DD_LOGS_CONFIG_K8S_CONTAINER_USE_FILE
            value: "true"
          - name: DD_SYSTEM_PROBE_NETWORK_ENABLED
            value: "true"
          - name: DD_SYSTEM_PROBE_ENABLED
            value: "true"
          - name: DD_SYSPROBE_SOCKET
            value: /var/run/sysprobe/sysprobe.sock
          - name: DD_COLLECT_DNS_STATS
            value: "true"
          - name: DD_SYSTEM_PROBE_CONFIG_ENABLE_CONNTRACK
            value: "true"
          - name: DD_ORCHESTRATOR_EXPLORER_ENABLED
            value: "true"
          - name: DD_ORCHESTRATOR_EXPLORER_CONTAINER_SCRUBBING_ENABLED
            value: "true"
          - name: DD_AGENT_IPC_PORT
            value: "5009"
          - name: DD_AGENT_IPC_CONFIG_REFRESH_INTERVAL
            value: "60"
          - name: DD_OTELCOLLECTOR_ENABLED
            value: "true"
          - name: DD_PROCESS_CONFIG_PROCESS_DISCOVERY_ENABLED
            value: "true"
          - name: DD_REMOTE_CONFIGURATION_ENABLED
            value: "true"
          - name: DD_SYSTEM_PROBE_SERVICE_MONITORING_ENABLED
            value: "true"
          - name: DD_PROCESS_CONFIG_PROCESS_COLLECTION_ENABLED
            value: "true"
          - name: DD_PROCESS_AGENT_ENABLED
            value: "true"
          - name: DD_KUBELET_TLS_VERIFY
            value: "false"
          - name: DD_CONTAINER_INCLUDE
            value: name:heffner.live
          image: gcr.io/datadoghq/agent:latest-full
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /live
              port: 5555
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          name: agent
          ports:
          - containerPort: 8125
            name: dogstatsdport
            protocol: UDP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /ready
              port: 5555
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          startupProbe:
            failureThreshold: 6
            httpGet:
              path: /startup
              port: 5555
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log/datadog
            name: logdatadog
          - mountPath: /etc/datadog-agent/auth
            name: datadog-agent-auth
          - mountPath: /etc/datadog-agent/install_info
            name: installinfo
            readOnly: true
            subPath: install_info
          - mountPath: /etc/datadog-agent
            name: config
          - mountPath: /host/proc
            name: procdir
            readOnly: true
          - mountPath: /host/sys/fs/cgroup
            name: cgroups
            readOnly: true
          - mountPath: /var/run/datadog
            name: dsdsocket
          - mountPath: /host/var/run
            name: runtimesocketdir
            readOnly: true
          - mountPath: /var/run/sysprobe
            name: sysprobe-socket-dir
            readOnly: true
          - mountPath: /opt/datadog-agent/run
            name: pointerdir
          - mountPath: /var/log/pods
            name: logpodpath
            readOnly: true
          - mountPath: /var/lib/docker/containers
            name: logcontainerpath
            readOnly: true
          - mountPath: /var/log/containers
            name: symlinkcontainerpath
            readOnly: true
          - mountPath: /etc/passwd
            name: passwd
            readOnly: true
        - command:
          - trace-agent
          - --config=/etc/datadog-agent/datadog.yaml
          env:
          - name: DD_INSTRUMENTATION_INSTALL_ID
            value: f656f4f7-9673-410d-a246-6ce3cd25a64f
          - name: DD_INSTRUMENTATION_INSTALL_TIME
            value: "1747942833"
          - name: DD_INSTRUMENTATION_INSTALL_TYPE
            value: k8s_manual
          - name: KUBERNETES
            value: "yes"
          - name: DD_CLUSTER_AGENT_ENABLED
            value: "true"
          - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
            value: datadog-cluster-agent
          - name: DD_CLUSTER_AGENT_TOKEN_NAME
            value: datadog-token
          - name: DD_KUBERNETES_KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: DD_CLUSTER_NAME
            value: heffner.k8s
          - name: DD_SITE
            value: us5.datadoghq.com
          - name: DD_LOG_LEVEL
            value: info
          - name: DD_TAGS
            value: '["env:prod"]'
          - name: DD_APM_ENABLED
            value: "true"
          - name: DD_APM_RECEIVER_SOCKET
            value: /var/run/datadog/apm.socket
          - name: DD_CLUSTER_AGENT_AUTH_TOKEN
            valueFrom:
              secretKeyRef:
                key: token
                name: datadog-token
          - name: DD_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: datadog-secret
          - name: DD_DOGSTATSD_SOCKET
            value: /var/run/datadog/dsd.socket
          - name: DD_REMOTE_CONFIGURATION_ENABLED
            value: "true"
          image: gcr.io/datadoghq/agent:latest-full
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            tcpSocket:
              port: 8126
            timeoutSeconds: 5
          name: trace-agent
          ports:
          - containerPort: 8126
            name: traceport
            protocol: TCP
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log/datadog
            name: logdatadog
          - mountPath: /host/proc
            name: procdir
            readOnly: true
          - mountPath: /host/sys/fs/cgroup
            name: cgroups
            readOnly: true
          - mountPath: /etc/datadog-agent/auth
            name: datadog-agent-auth
            readOnly: true
          - mountPath: /etc/datadog-agent
            name: config
          - mountPath: /var/run/datadog
            name: apmsocket
          - mountPath: /host/var/run
            name: runtimesocketdir
            readOnly: true
        - command:
          - security-agent
          - start
          - -c=/etc/datadog-agent/datadog.yaml
          env:
          - name: HOST_ROOT
            value: /host/root
          - name: KUBERNETES
            value: "yes"
          - name: DD_CLUSTER_AGENT_ENABLED
            value: "true"
          - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
            value: datadog-cluster-agent
          - name: DD_CLUSTER_AGENT_TOKEN_NAME
            value: datadog-token
          - name: DD_KUBERNETES_KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: DD_CLUSTER_NAME
            value: heffner.k8s
          - name: DD_SITE
            value: us5.datadoghq.com
          - name: DD_LOG_LEVEL
            value: info
          - name: DD_TAGS
            value: '["env:prod"]'
          - name: DD_RUNTIME_SECURITY_CONFIG_ENABLED
            value: "true"
          - name: DD_RUNTIME_SECURITY_CONFIG_SOCKET
            value: /var/run/sysprobe/runtime-security.sock
          - name: DD_CLUSTER_AGENT_AUTH_TOKEN
            valueFrom:
              secretKeyRef:
                key: token
                name: datadog-token
          - name: DD_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: datadog-secret
          - name: DD_DOGSTATSD_SOCKET
            value: /var/run/datadog/dsd.socket
          - name: DD_REMOTE_CONFIGURATION_ENABLED
            value: "true"
          image: gcr.io/datadoghq/agent:latest-full
          imagePullPolicy: Always
          name: security-agent
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log/datadog
            name: logdatadog
          - mountPath: /etc/datadog-agent/auth
            name: datadog-agent-auth
            readOnly: true
          - mountPath: /etc/datadog-agent
            name: config
          - mountPath: /var/run/datadog
            name: dsdsocket
          - mountPath: /host/var/run
            name: runtimesocketdir
            readOnly: true
          - mountPath: /var/run/sysprobe
            name: sysprobe-socket-dir
            readOnly: true
          - mountPath: /host/root
            name: hostroot
            readOnly: true
        - command:
          - system-probe
          - --config=/etc/datadog-agent/system-probe.yaml
          env:
          - name: KUBERNETES
            value: "yes"
          - name: DD_CLUSTER_AGENT_ENABLED
            value: "true"
          - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
            value: datadog-cluster-agent
          - name: DD_CLUSTER_AGENT_TOKEN_NAME
            value: datadog-token
          - name: DD_KUBERNETES_KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: DD_CLUSTER_NAME
            value: heffner.k8s
          - name: DD_SITE
            value: us5.datadoghq.com
          - name: DD_LOG_LEVEL
            value: info
          - name: DD_TAGS
            value: '["env:prod"]'
          - name: DD_RUNTIME_SECURITY_CONFIG_ENABLED
            value: "true"
          - name: DD_RUNTIME_SECURITY_CONFIG_SOCKET
            value: /var/run/sysprobe/runtime-security.sock
          - name: DD_RUNTIME_SECURITY_CONFIG_NETWORK_ENABLED
            value: "true"
          - name: DD_RUNTIME_SECURITY_CONFIG_ACTIVITY_DUMP_ENABLED
            value: "true"
          - name: DD_RUNTIME_SECURITY_CONFIG_REMOTE_CONFIGURATION_ENABLED
            value: "true"
          - name: DD_RUNTIME_SECURITY_CONFIG_POLICIES_DIR
            value: /etc/datadog-agent/runtime-security.d
          - name: DD_CLUSTER_AGENT_AUTH_TOKEN
            valueFrom:
              secretKeyRef:
                key: token
                name: datadog-token
          - name: DD_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: datadog-secret
          - name: DD_DOGSTATSD_SOCKET
            value: /var/run/datadog/dsd.socket
          - name: DD_SYSTEM_PROBE_NETWORK_ENABLED
            value: "true"
          - name: DD_SYSTEM_PROBE_ENABLED
            value: "true"
          - name: DD_SYSPROBE_SOCKET
            value: /var/run/sysprobe/sysprobe.sock
          - name: DD_COLLECT_DNS_STATS
            value: "true"
          - name: DD_SYSTEM_PROBE_CONFIG_ENABLE_CONNTRACK
            value: "true"
          - name: DD_REMOTE_CONFIGURATION_ENABLED
            value: "true"
          - name: DD_SYSTEM_PROBE_SERVICE_MONITORING_ENABLED
            value: "true"
          image: gcr.io/datadoghq/agent:latest-full
          imagePullPolicy: Always
          name: system-probe
          securityContext:
            capabilities:
              add:
              - CHOWN
              - DAC_READ_SEARCH
              - IPC_LOCK
              - NET_ADMIN
              - NET_BROADCAST
              - NET_RAW
              - SYS_ADMIN
              - SYS_PTRACE
              - SYS_RESOURCE
            seccompProfile:
              localhostProfile: system-probe
              type: Localhost
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log/datadog
            name: logdatadog
          - mountPath: /etc/datadog-agent/auth
            name: datadog-agent-auth
            readOnly: true
          - mountPath: /etc/datadog-agent
            name: config
          - mountPath: /sys/kernel/debug
            name: debugfs
          - mountPath: /sys/kernel/tracing
            name: tracefs
          - mountPath: /host/sys/kernel/security
            name: securityfs
            readOnly: true
          - mountPath: /var/run/sysprobe
            name: sysprobe-socket-dir
          - mountPath: /host/proc
            name: procdir
            readOnly: true
          - mountPath: /etc/passwd
            name: passwd
            readOnly: true
          - mountPath: /etc/group
            name: group
            readOnly: true
          - mountPath: /host/etc/os-release
            name: host-osrelease
            readOnly: true
          - mountPath: /host/sys/fs/cgroup
            name: cgroups
            readOnly: true
        - command:
          - process-agent
          - --config=/etc/datadog-agent/datadog.yaml
          - --sysprobe-config=/etc/datadog-agent/system-probe.yaml
          env:
          - name: KUBERNETES
            value: "yes"
          - name: DD_CLUSTER_AGENT_ENABLED
            value: "true"
          - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
            value: datadog-cluster-agent
          - name: DD_CLUSTER_AGENT_TOKEN_NAME
            value: datadog-token
          - name: DD_KUBERNETES_KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: DD_CLUSTER_NAME
            value: heffner.k8s
          - name: DD_SITE
            value: us5.datadoghq.com
          - name: DD_LOG_LEVEL
            value: info
          - name: DD_TAGS
            value: '["env:prod"]'
          - name: DD_LANGUAGE_DETECTION_ENABLED
            value: "true"
          - name: DD_PROCESS_CONFIG_RUN_IN_CORE_AGENT_ENABLED
            value: "true"
          - name: DD_CLUSTER_AGENT_AUTH_TOKEN
            valueFrom:
              secretKeyRef:
                key: token
                name: datadog-token
          - name: DD_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: datadog-secret
          - name: DD_DOGSTATSD_SOCKET
            value: /var/run/datadog/dsd.socket
          - name: DD_SYSTEM_PROBE_NETWORK_ENABLED
            value: "true"
          - name: DD_SYSTEM_PROBE_ENABLED
            value: "true"
          - name: DD_SYSPROBE_SOCKET
            value: /var/run/sysprobe/sysprobe.sock
          - name: DD_SYSTEM_PROBE_EXTERNAL
            value: "true"
          - name: DD_REMOTE_CONFIGURATION_ENABLED
            value: "true"
          - name: DD_SYSTEM_PROBE_SERVICE_MONITORING_ENABLED
            value: "true"
          image: gcr.io/datadoghq/agent:latest-full
          imagePullPolicy: Always
          name: process-agent
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log/datadog
            name: logdatadog
          - mountPath: /etc/datadog-agent/auth
            name: datadog-agent-auth
            readOnly: true
          - mountPath: /etc/datadog-agent
            name: config
          - mountPath: /var/run/datadog
            name: dsdsocket
          - mountPath: /host/var/run
            name: runtimesocketdir
            readOnly: true
          - mountPath: /host/proc
            name: procdir
            readOnly: true
          - mountPath: /host/sys/fs/cgroup
            name: cgroups
            readOnly: true
          - mountPath: /sys/kernel/debug
            name: debugfs
          - mountPath: /var/run/sysprobe
            name: sysprobe-socket-dir
            readOnly: true
        - command:
          - otel-agent
          - --config=/etc/datadog-agent/otel-config.yaml
          - --core-config=/etc/datadog-agent/datadog.yaml
          - --sync-delay=30s
          env:
          - name: DD_CLUSTER_NAME
            value: heffner.k8s
          - name: DD_SITE
            value: us5.datadoghq.com
          - name: DD_LOG_LEVEL
            value: info
          - name: DD_TAGS
            value: '["env:prod"]'
          - name: DD_CLUSTER_AGENT_AUTH_TOKEN
            valueFrom:
              secretKeyRef:
                key: token
                name: datadog-token
          - name: DD_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: datadog-secret
          - name: DD_DOGSTATSD_SOCKET
            value: /var/run/datadog/dsd.socket
          - name: DD_AGENT_IPC_PORT
            value: "5009"
          - name: DD_AGENT_IPC_CONFIG_REFRESH_INTERVAL
            value: "60"
          - name: DD_REMOTE_CONFIGURATION_ENABLED
            value: "true"
          - name: DD_OTELCOLLECTOR_ENABLED
            value: "true"
          image: gcr.io/datadoghq/agent:latest-full
          imagePullPolicy: Always
          name: otel-agent
          ports:
          - containerPort: 4317
            hostPort: 4317
            name: otel-grpc
            protocol: TCP
          - containerPort: 4318
            hostPort: 4318
            name: otel-http
            protocol: TCP
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log/datadog
            name: logdatadog
          - mountPath: /etc/datadog-agent
            name: config
          - mountPath: /etc/datadog-agent/auth
            name: datadog-agent-auth
            readOnly: true
          - mountPath: /etc/datadog-agent/otel-config.yaml
            name: otel-agent-config-volume
            readOnly: true
            subPath: otel-config.yaml
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - cp -vnr /etc/datadog-agent /opt
          command:
          - bash
          - -c
          image: gcr.io/datadoghq/agent:latest-full
          imagePullPolicy: Always
          name: init-volume
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/datadog-agent
            name: config
          - mountPath: /var/log/nginx
            name: nginx-logs
            readOnly: true
        - args:
          - for script in $(find /etc/cont-init.d/ -type f -name '*.sh' | sort) ;
            do bash $script ; done
          command:
          - bash
          - -c
          env:
          - name: DD_HEALTH_PORT
            value: "5555"
          - name: DD_CONTAINER_IMAGE_ENABLED
            value: "true"
          - name: KUBERNETES
            value: "yes"
          - name: DD_CLUSTER_AGENT_ENABLED
            value: "true"
          - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
            value: datadog-cluster-agent
          - name: DD_CLUSTER_AGENT_TOKEN_NAME
            value: datadog-token
          - name: DD_KUBERNETES_KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          image: gcr.io/datadoghq/agent:latest-full
          imagePullPolicy: Always
          name: init-config
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log/datadog
            name: logdatadog
          - mountPath: /checks.d
            name: checksd
            readOnly: true
          - mountPath: /etc/datadog-agent/auth
            name: datadog-agent-auth
          - mountPath: /conf.d
            name: confd
            readOnly: true
          - mountPath: /etc/datadog-agent
            name: config
          - mountPath: /host/proc
            name: procdir
            readOnly: true
          - mountPath: /host/var/run
            name: runtimesocketdir
            readOnly: true
        - command:
          - cp
          - /etc/config/system-probe-seccomp.json
          - /host/var/lib/kubelet/seccomp/system-probe
          image: gcr.io/datadoghq/agent:latest-full
          imagePullPolicy: Always
          name: seccomp-setup
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: datadog-agent-security
          - mountPath: /host/var/lib/kubelet/seccomp
            name: seccomp-root
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsUser: 0
        serviceAccount: datadog-agent
        serviceAccountName: datadog-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - hostPath:
            path: /var/log/nginx
            type: DirectoryOrCreate
          name: nginx-logs
        - name: logdatadog
        - name: datadog-agent-auth
        - configMap:
            defaultMode: 420
            name: datadog-install-info
          name: installinfo
        - name: checksd
        - name: confd
        - name: config
        - hostPath:
            path: /proc
            type: ""
          name: procdir
        - hostPath:
            path: /sys/fs/cgroup
            type: ""
          name: cgroups
        - hostPath:
            path: /var/run/datadog
            type: DirectoryOrCreate
          name: dsdsocket
        - hostPath:
            path: /var/run
            type: ""
          name: runtimesocketdir
        - configMap:
            defaultMode: 420
            name: datadog-system-probe-seccomp
          name: datadog-agent-security
        - hostPath:
            path: /var/lib/kubelet/seccomp
            type: ""
          name: seccomp-root
        - hostPath:
            path: /var/run/datadog
            type: DirectoryOrCreate
          name: apmsocket
        - hostPath:
            path: /sys/kernel/debug
            type: ""
          name: debugfs
        - hostPath:
            path: /sys/kernel/tracing
            type: ""
          name: tracefs
        - hostPath:
            path: /sys/kernel/security
            type: ""
          name: securityfs
        - name: sysprobe-socket-dir
        - hostPath:
            path: /etc/passwd
            type: ""
          name: passwd
        - hostPath:
            path: /etc/group
            type: ""
          name: group
        - hostPath:
            path: /etc/os-release
            type: ""
          name: host-osrelease
        - hostPath:
            path: /
            type: ""
          name: hostroot
        - hostPath:
            path: /var/lib/datadog-agent/logs
            type: ""
          name: pointerdir
        - hostPath:
            path: /var/log/pods
            type: ""
          name: logpodpath
        - hostPath:
            path: /var/lib/docker/containers
            type: ""
          name: logcontainerpath
        - hostPath:
            path: /var/log/containers
            type: ""
          name: symlinkcontainerpath
        - configMap:
            defaultMode: 420
            name: datadog-otel-agent-config
          name: otel-agent-config-volume
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      agent.datadoghq.com/agentspechash: 04d5495161ac460f698242e4996175ea
      deployment.kubernetes.io/revision: "6"
    labels:
      agent.datadoghq.com/component: cluster-agent
      agent.datadoghq.com/name: datadog
      app.kubernetes.io/component: cluster-agent
      app.kubernetes.io/instance: datadog-cluster-agent
      app.kubernetes.io/managed-by: datadog-operator
      app.kubernetes.io/name: datadog-agent-deployment
      app.kubernetes.io/part-of: default-datadog
      app.kubernetes.io/version: ""
    name: datadog-cluster-agent
    namespace: default
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        agent.datadoghq.com/component: cluster-agent
        agent.datadoghq.com/name: datadog
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/cluster_checks-custom-config: f7dc31a1080204b2a0f72ea0cc314033
          checksum/default-custom-config: dd51953a8d3959ab0339bd9777452024
        creationTimestamp: null
        labels:
          agent.datadoghq.com/component: cluster-agent
          agent.datadoghq.com/name: datadog
          app.kubernetes.io/component: cluster-agent
          app.kubernetes.io/instance: datadog-cluster-agent
          app.kubernetes.io/managed-by: datadog-operator
          app.kubernetes.io/name: datadog-agent-deployment
          app.kubernetes.io/part-of: default-datadog
          app.kubernetes.io/version: ""
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    agent.datadoghq.com/component: cluster-agent
                topologyKey: kubernetes.io/hostname
              weight: 50
        containers:
        - env:
          - name: DD_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
            value: datadog-cluster-agent
          - name: DD_KUBE_RESOURCES_NAMESPACE
            value: default
          - name: DD_LEADER_ELECTION
            value: "true"
          - name: DD_HEALTH_PORT
            value: "5555"
          - name: DD_INSTRUMENTATION_INSTALL_ID
            value: f656f4f7-9673-410d-a246-6ce3cd25a64f
          - name: DD_INSTRUMENTATION_INSTALL_TIME
            value: "1747942833"
          - name: DD_INSTRUMENTATION_INSTALL_TYPE
            value: k8s_manual
          - name: DD_AUTH_TOKEN_FILE_PATH
            value: /etc/datadog-agent/auth/token
          - name: DD_CLUSTER_NAME
            value: heffner.k8s
          - name: DD_SITE
            value: us5.datadoghq.com
          - name: DD_LOG_LEVEL
            value: info
          - name: DD_TAGS
            value: '["env:prod"]'
          - name: DD_ADMISSION_CONTROLLER_ENABLED
            value: "true"
          - name: DD_ADMISSION_CONTROLLER_VALIDATION_ENABLED
            value: "true"
          - name: DD_ADMISSION_CONTROLLER_MUTATION_ENABLED
            value: "true"
          - name: DD_ADMISSION_CONTROLLER_MUTATE_UNLABELLED
            value: "false"
          - name: DD_ADMISSION_CONTROLLER_CONTAINER_REGISTRY
            value: gcr.io/datadoghq
          - name: DD_ADMISSION_CONTROLLER_SERVICE_NAME
            value: datadog-admission-controller
          - name: DD_ADMISSION_CONTROLLER_INJECT_CONFIG_MODE
            value: socket
          - name: DD_ADMISSION_CONTROLLER_INJECT_CONFIG_LOCAL_SERVICE_NAME
            value: datadog-agent
          - name: DD_ADMISSION_CONTROLLER_WEBHOOK_NAME
            value: datadog-webhook
          - name: DD_APM_INSTRUMENTATION_ENABLED
            value: "true"
          - name: DD_LANGUAGE_DETECTION_ENABLED
            value: "true"
          - name: DD_APM_INSTRUMENTATION_TARGETS
            value: '[{"name":"default-target","ddTraceVersions":{"dotnet":"3","java":"1","js":"5","php":"1","python":"3"}}]'
          - name: DD_ADMISSION_CONTROLLER_AUTO_INSTRUMENTATION_APPSEC_ENABLED
            value: "true"
          - name: DD_CLUSTER_CHECKS_ENABLED
            value: "true"
          - name: DD_EXTRA_CONFIG_PROVIDERS
            value: kube_services kube_endpoints
          - name: DD_EXTRA_LISTENERS
            value: kube_services kube_endpoints
          - name: DD_CLUSTER_AGENT_AUTH_TOKEN
            valueFrom:
              secretKeyRef:
                key: token
                name: datadog-token
          - name: DD_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: datadog-secret
          - name: DD_CLUSTER_AGENT_SERVICE_ACCOUNT_NAME
            value: datadog-cluster-agent
          - name: AGENT_DAEMONSET
            value: datadog-agent
          - name: CLUSTER_AGENT_DEPLOYMENT
            value: datadog-cluster-agent
          - name: DATADOGAGENT_CR_NAME
            value: datadog
          - name: DD_COLLECT_KUBERNETES_EVENTS
            value: "true"
          - name: DD_LEADER_LEASE_NAME
            value: datadog-leader-election
          - name: DD_CLUSTER_AGENT_TOKEN_NAME
            value: datadog-token
          - name: DD_KUBE_STATE_METRICS_CORE_ENABLED
            value: "true"
          - name: DD_KUBE_STATE_METRICS_CORE_CONFIGMAP_NAME
            value: datadog-kube-state-metrics-core-config
          - name: DD_ORCHESTRATOR_EXPLORER_ENABLED
            value: "true"
          - name: DD_ORCHESTRATOR_EXPLORER_CONTAINER_SCRUBBING_ENABLED
            value: "true"
          - name: DD_REMOTE_CONFIGURATION_ENABLED
            value: "true"
          image: gcr.io/datadoghq/cluster-agent:7.64.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /live
              port: 5555
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          name: cluster-agent
          ports:
          - containerPort: 5005
            name: agentport
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /ready
              port: 5555
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          startupProbe:
            failureThreshold: 6
            httpGet:
              path: /startup
              port: 5555
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/datadog-agent/install_info
            name: installinfo
            readOnly: true
            subPath: install_info
          - mountPath: /conf.d
            name: confd
            readOnly: true
          - mountPath: /var/log/datadog
            name: logdatadog
          - mountPath: /etc/datadog-agent/certificates
            name: certificates
          - mountPath: /etc/datadog-agent/auth
            name: datadog-agent-auth
          - mountPath: /tmp
            name: tmp
          - mountPath: /etc/datadog-agent/conf.d/kubernetes_state_core.d
            name: ksm-core-config
            readOnly: true
          - mountPath: /etc/datadog-agent/conf.d/orchestrator.d
            name: orchestrator-explorer-config
            readOnly: true
          - mountPath: /opt/datadog-agent/run/
            name: datadogrun
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        serviceAccount: datadog-cluster-agent
        serviceAccountName: datadog-cluster-agent
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: datadog-install-info
          name: installinfo
        - name: confd
        - name: logdatadog
        - name: certificates
        - name: datadog-agent-auth
        - name: tmp
        - configMap:
            defaultMode: 420
            name: datadog-kube-state-metrics-core-config
          name: ksm-core-config
        - configMap:
            defaultMode: 420
            name: datadog-orchestrator-explorer-config
          name: orchestrator-explorer-config
        - name: datadogrun
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: datadog-operator
      meta.helm.sh/release-namespace: default
    labels:
      app.kubernetes.io/instance: datadog-operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: datadog-operator
      app.kubernetes.io/version: 1.14.0
      helm.sh/chart: datadog-operator-2.9.2
    name: datadog-operator
    namespace: default
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: datadog-operator
        app.kubernetes.io/name: datadog-operator
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          ad.datadoghq.com/datadog-operator.check_names: '["openmetrics"]'
          ad.datadoghq.com/datadog-operator.init_configs: '[{}]'
          ad.datadoghq.com/datadog-operator.instances: |
            [{
              "prometheus_url": "http://%%host%%:8383/metrics",
              "namespace": "datadog.operator",
              "metrics": ["*"]
            }]
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: datadog-operator
          app.kubernetes.io/name: datadog-operator
      spec:
        containers:
        - args:
          - -supportExtendedDaemonset=false
          - -logEncoder=json
          - -metrics-addr=:8383
          - -loglevel=info
          - -operatorMetricsEnabled=true
          - -introspectionEnabled=false
          - -datadogAgentProfileEnabled=false
          - -datadogMonitorEnabled=false
          - -datadogAgentEnabled=true
          - -datadogSLOEnabled=false
          - -datadogDashboardEnabled=false
          - -datadogGenericResourceEnabled=false
          - -remoteConfigEnabled=false
          env:
          - name: WATCH_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: DD_TOOL_VERSION
            value: helm
          - name: DD_CLUSTER_NAME
            value: heffner.k8s
          image: gcr.io/datadoghq/operator:1.14.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz/
              port: 8081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: datadog-operator
          ports:
          - containerPort: 8383
            name: metrics
            protocol: TCP
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        serviceAccount: datadog-operator
        serviceAccountName: datadog-operator
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "43"
      internal.dd.datadoghq.com/fail2ban.detected_langs: python
    labels:
      app: nginx-web
      k8slens-edit-resource-version: v1
    name: nginx-web
    namespace: default
  spec:
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: nginx-web
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          ad.datadoghq.com/fail2ban.logs: |
            [
              {
                "source": "fail2ban",
                "service": "nginx-web",
                "type": "file",
                "path": "/var/log/fail2ban.log"
              }
            ]
          ad.datadoghq.com/nginx.checks: |
            {
              "nginx": {
                "init_config": {},
                "instances": [
                  {
                    "nginx_status_url": "http://%%host%%:81/nginx_status/"
                  }
                ]
              }
            }
          ad.datadoghq.com/nginx.logs: |
            [
              {
                "source": "nginx",
                "service": "nginx-web",
                "type": "file",
                "path": "/var/log/nginx/access.log"
              }
            ]
          kubectl.kubernetes.io/restartedAt: "2025-05-22T18:02:39-04:00"
        creationTimestamp: null
        labels:
          app: nginx-web
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: node-role.kubernetes.io/control-plane
                  operator: DoesNotExist
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: nginx-web
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - env:
          - name: DEPLOY_DATE
            value: Fri May 24 01:22:17 PM EDT 2024
          - name: STAKATER_WWW_CONFIGMAP_CONFIGMAP
            value: c1a627beae5dca1bb899251e31a22aba5e780b17
          - name: STAKATER_NGINX_CONFIG_CONFIGMAP
            value: f08151630a688fb09bc94d87d4dc9ec8a4b3aa72
          image: technotuba/nginx:v2025.5.10
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          - containerPort: 81
            protocol: TCP
          resources:
            requests:
              cpu: 100m
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/fail2ban/action.d/cloudflare-ban.conf
            name: fail2ban-config-cloudflare
            subPath: cloudflare-ban.conf
          - mountPath: /usr/share/nginx/html
            name: www-volume
          - mountPath: /etc/nginx/nginx.conf
            name: config-volume
            subPath: nginx.conf
          - mountPath: /usr/share/nginx/html/image
            name: images-volume
          - mountPath: /etc/nginx/conf.d/status.conf
            name: config
            readOnly: true
            subPath: status.conf
          - mountPath: /var/log/nginx
            name: nginx-logs
        - env:
          - name: TZ
            value: America/New_York
          image: crazymax/fail2ban:latest
          imagePullPolicy: Always
          name: fail2ban
          resources:
            requests:
              cpu: 1m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/fail2ban/action.d/cloudflare-ban.conf
            name: fail2ban-config-cloudflare
            subPath: cloudflare-ban.conf
          - mountPath: /etc/cloudflare
            name: cloudflare-creds
          - mountPath: /usr/local/bin/fail2ban-cloudflare-ban.sh
            name: ban-script
            subPath: fail2ban-cloudflare-ban.sh
          - mountPath: /etc/fail2ban/fail2ban.conf
            name: fail2ban-main-config
            subPath: fail2ban.conf
          - mountPath: /etc/fail2ban/jail.local
            name: fail2ban-config
            subPath: jail.local
          - mountPath: /etc/fail2ban/filter.d/nginx-404.conf
            name: fail2ban-config
            subPath: nginx-404.conf
          - mountPath: /var/log/nginx
            name: nginx-logs
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /var/log/nginx
            type: DirectoryOrCreate
          name: nginx-logs
        - configMap:
            defaultMode: 420
            name: fail2ban-config
          name: fail2ban-config-cloudflare
        - configMap:
            defaultMode: 493
            name: fail2ban-cloudflare-ban-script
          name: ban-script
        - name: cloudflare-creds
          secret:
            defaultMode: 420
            secretName: cloudflare-creds
        - configMap:
            defaultMode: 420
            name: fail2ban-main-config
          name: fail2ban-main-config
        - configMap:
            defaultMode: 420
            name: nginx-config
          name: config
        - configMap:
            defaultMode: 420
            name: fail2ban-config
          name: fail2ban-config
        - configMap:
            defaultMode: 420
            name: www-configmap
          name: www-volume
        - configMap:
            defaultMode: 420
            name: nginx-config
          name: config-volume
        - hostPath:
            path: /home/huey/www/images
            type: Directory
          name: images-volume
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      agent.datadoghq.com/agentspechash: 04d5495161ac460f698242e4996175ea
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
    labels:
      agent.datadoghq.com/component: cluster-agent
      agent.datadoghq.com/name: datadog
      app.kubernetes.io/component: cluster-agent
      app.kubernetes.io/instance: datadog-cluster-agent
      app.kubernetes.io/managed-by: datadog-operator
      app.kubernetes.io/name: datadog-agent-deployment
      app.kubernetes.io/part-of: default-datadog
      app.kubernetes.io/version: ""
      pod-template-hash: 9b69799bd
    name: datadog-cluster-agent-9b69799bd
    namespace: default
  spec:
    replicas: 1
    selector:
      matchLabels:
        agent.datadoghq.com/component: cluster-agent
        agent.datadoghq.com/name: datadog
        pod-template-hash: 9b69799bd
    template:
      metadata:
        annotations:
          checksum/cluster_checks-custom-config: f7dc31a1080204b2a0f72ea0cc314033
          checksum/default-custom-config: dd51953a8d3959ab0339bd9777452024
        creationTimestamp: null
        labels:
          agent.datadoghq.com/component: cluster-agent
          agent.datadoghq.com/name: datadog
          app.kubernetes.io/component: cluster-agent
          app.kubernetes.io/instance: datadog-cluster-agent
          app.kubernetes.io/managed-by: datadog-operator
          app.kubernetes.io/name: datadog-agent-deployment
          app.kubernetes.io/part-of: default-datadog
          app.kubernetes.io/version: ""
          pod-template-hash: 9b69799bd
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    agent.datadoghq.com/component: cluster-agent
                topologyKey: kubernetes.io/hostname
              weight: 50
        containers:
        - env:
          - name: DD_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
            value: datadog-cluster-agent
          - name: DD_KUBE_RESOURCES_NAMESPACE
            value: default
          - name: DD_LEADER_ELECTION
            value: "true"
          - name: DD_HEALTH_PORT
            value: "5555"
          - name: DD_INSTRUMENTATION_INSTALL_ID
            value: f656f4f7-9673-410d-a246-6ce3cd25a64f
          - name: DD_INSTRUMENTATION_INSTALL_TIME
            value: "1747942833"
          - name: DD_INSTRUMENTATION_INSTALL_TYPE
            value: k8s_manual
          - name: DD_AUTH_TOKEN_FILE_PATH
            value: /etc/datadog-agent/auth/token
          - name: DD_CLUSTER_NAME
            value: heffner.k8s
          - name: DD_SITE
            value: us5.datadoghq.com
          - name: DD_LOG_LEVEL
            value: info
          - name: DD_TAGS
            value: '["env:prod"]'
          - name: DD_ADMISSION_CONTROLLER_ENABLED
            value: "true"
          - name: DD_ADMISSION_CONTROLLER_VALIDATION_ENABLED
            value: "true"
          - name: DD_ADMISSION_CONTROLLER_MUTATION_ENABLED
            value: "true"
          - name: DD_ADMISSION_CONTROLLER_MUTATE_UNLABELLED
            value: "false"
          - name: DD_ADMISSION_CONTROLLER_CONTAINER_REGISTRY
            value: gcr.io/datadoghq
          - name: DD_ADMISSION_CONTROLLER_SERVICE_NAME
            value: datadog-admission-controller
          - name: DD_ADMISSION_CONTROLLER_INJECT_CONFIG_MODE
            value: socket
          - name: DD_ADMISSION_CONTROLLER_INJECT_CONFIG_LOCAL_SERVICE_NAME
            value: datadog-agent
          - name: DD_ADMISSION_CONTROLLER_WEBHOOK_NAME
            value: datadog-webhook
          - name: DD_APM_INSTRUMENTATION_ENABLED
            value: "true"
          - name: DD_LANGUAGE_DETECTION_ENABLED
            value: "true"
          - name: DD_APM_INSTRUMENTATION_TARGETS
            value: '[{"name":"default-target","ddTraceVersions":{"dotnet":"3","java":"1","js":"5","php":"1","python":"3"}}]'
          - name: DD_ADMISSION_CONTROLLER_AUTO_INSTRUMENTATION_APPSEC_ENABLED
            value: "true"
          - name: DD_CLUSTER_CHECKS_ENABLED
            value: "true"
          - name: DD_EXTRA_CONFIG_PROVIDERS
            value: kube_services kube_endpoints
          - name: DD_EXTRA_LISTENERS
            value: kube_services kube_endpoints
          - name: DD_CLUSTER_AGENT_AUTH_TOKEN
            valueFrom:
              secretKeyRef:
                key: token
                name: datadog-token
          - name: DD_API_KEY
            valueFrom:
              secretKeyRef:
                key: api-key
                name: datadog-secret
          - name: DD_CLUSTER_AGENT_SERVICE_ACCOUNT_NAME
            value: datadog-cluster-agent
          - name: AGENT_DAEMONSET
            value: datadog-agent
          - name: CLUSTER_AGENT_DEPLOYMENT
            value: datadog-cluster-agent
          - name: DATADOGAGENT_CR_NAME
            value: datadog
          - name: DD_COLLECT_KUBERNETES_EVENTS
            value: "true"
          - name: DD_LEADER_LEASE_NAME
            value: datadog-leader-election
          - name: DD_CLUSTER_AGENT_TOKEN_NAME
            value: datadog-token
          - name: DD_KUBE_STATE_METRICS_CORE_ENABLED
            value: "true"
          - name: DD_KUBE_STATE_METRICS_CORE_CONFIGMAP_NAME
            value: datadog-kube-state-metrics-core-config
          - name: DD_ORCHESTRATOR_EXPLORER_ENABLED
            value: "true"
          - name: DD_ORCHESTRATOR_EXPLORER_CONTAINER_SCRUBBING_ENABLED
            value: "true"
          - name: DD_REMOTE_CONFIGURATION_ENABLED
            value: "true"
          image: gcr.io/datadoghq/cluster-agent:7.64.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /live
              port: 5555
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          name: cluster-agent
          ports:
          - containerPort: 5005
            name: agentport
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /ready
              port: 5555
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          startupProbe:
            failureThreshold: 6
            httpGet:
              path: /startup
              port: 5555
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/datadog-agent/install_info
            name: installinfo
            readOnly: true
            subPath: install_info
          - mountPath: /conf.d
            name: confd
            readOnly: true
          - mountPath: /var/log/datadog
            name: logdatadog
          - mountPath: /etc/datadog-agent/certificates
            name: certificates
          - mountPath: /etc/datadog-agent/auth
            name: datadog-agent-auth
          - mountPath: /tmp
            name: tmp
          - mountPath: /etc/datadog-agent/conf.d/kubernetes_state_core.d
            name: ksm-core-config
            readOnly: true
          - mountPath: /etc/datadog-agent/conf.d/orchestrator.d
            name: orchestrator-explorer-config
            readOnly: true
          - mountPath: /opt/datadog-agent/run/
            name: datadogrun
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        serviceAccount: datadog-cluster-agent
        serviceAccountName: datadog-cluster-agent
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: datadog-install-info
          name: installinfo
        - name: confd
        - name: logdatadog
        - name: certificates
        - name: datadog-agent-auth
        - name: tmp
        - configMap:
            defaultMode: 420
            name: datadog-kube-state-metrics-core-config
          name: ksm-core-config
        - configMap:
            defaultMode: 420
            name: datadog-orchestrator-explorer-config
          name: orchestrator-explorer-config
        - name: datadogrun
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: datadog-operator
      meta.helm.sh/release-namespace: default
    labels:
      app.kubernetes.io/instance: datadog-operator
      app.kubernetes.io/name: datadog-operator
      pod-template-hash: 6dc6d8d44c
    name: datadog-operator-6dc6d8d44c
    namespace: default
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: datadog-operator
        app.kubernetes.io/name: datadog-operator
        pod-template-hash: 6dc6d8d44c
    template:
      metadata:
        annotations:
          ad.datadoghq.com/datadog-operator.check_names: '["openmetrics"]'
          ad.datadoghq.com/datadog-operator.init_configs: '[{}]'
          ad.datadoghq.com/datadog-operator.instances: |
            [{
              "prometheus_url": "http://%%host%%:8383/metrics",
              "namespace": "datadog.operator",
              "metrics": ["*"]
            }]
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: datadog-operator
          app.kubernetes.io/name: datadog-operator
          pod-template-hash: 6dc6d8d44c
      spec:
        containers:
        - args:
          - -supportExtendedDaemonset=false
          - -logEncoder=json
          - -metrics-addr=:8383
          - -loglevel=info
          - -operatorMetricsEnabled=true
          - -introspectionEnabled=false
          - -datadogAgentProfileEnabled=false
          - -datadogMonitorEnabled=false
          - -datadogAgentEnabled=true
          - -datadogSLOEnabled=false
          - -datadogDashboardEnabled=false
          - -datadogGenericResourceEnabled=false
          - -remoteConfigEnabled=false
          env:
          - name: WATCH_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: DD_TOOL_VERSION
            value: helm
          - name: DD_CLUSTER_NAME
            value: heffner.k8s
          image: gcr.io/datadoghq/operator:1.14.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz/
              port: 8081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: datadog-operator
          ports:
          - containerPort: 8383
            name: metrics
            protocol: TCP
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        serviceAccount: datadog-operator
        serviceAccountName: datadog-operator
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "43"
      internal.dd.datadoghq.com/fail2ban.detected_langs: python
    labels:
      app: nginx-web
      pod-template-hash: 7f97754dd
    name: nginx-web-7f97754dd
    namespace: default
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: nginx-web
        pod-template-hash: 7f97754dd
    template:
      metadata:
        annotations:
          ad.datadoghq.com/fail2ban.logs: |
            [
              {
                "source": "fail2ban",
                "service": "nginx-web",
                "type": "file",
                "path": "/var/log/fail2ban.log"
              }
            ]
          ad.datadoghq.com/nginx.checks: |
            {
              "nginx": {
                "init_config": {},
                "instances": [
                  {
                    "nginx_status_url": "http://%%host%%:81/nginx_status/"
                  }
                ]
              }
            }
          ad.datadoghq.com/nginx.logs: |
            [
              {
                "source": "nginx",
                "service": "nginx-web",
                "type": "file",
                "path": "/var/log/nginx/access.log"
              }
            ]
          kubectl.kubernetes.io/restartedAt: "2025-05-22T18:02:39-04:00"
        creationTimestamp: null
        labels:
          app: nginx-web
          pod-template-hash: 7f97754dd
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: node-role.kubernetes.io/control-plane
                  operator: DoesNotExist
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: nginx-web
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - env:
          - name: DEPLOY_DATE
            value: Fri May 24 01:22:17 PM EDT 2024
          - name: STAKATER_WWW_CONFIGMAP_CONFIGMAP
            value: c1a627beae5dca1bb899251e31a22aba5e780b17
          - name: STAKATER_NGINX_CONFIG_CONFIGMAP
            value: f08151630a688fb09bc94d87d4dc9ec8a4b3aa72
          image: technotuba/nginx:v2025.5.10
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          - containerPort: 81
            protocol: TCP
          resources:
            requests:
              cpu: 100m
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/fail2ban/action.d/cloudflare-ban.conf
            name: fail2ban-config-cloudflare
            subPath: cloudflare-ban.conf
          - mountPath: /usr/share/nginx/html
            name: www-volume
          - mountPath: /etc/nginx/nginx.conf
            name: config-volume
            subPath: nginx.conf
          - mountPath: /usr/share/nginx/html/image
            name: images-volume
          - mountPath: /etc/nginx/conf.d/status.conf
            name: config
            readOnly: true
            subPath: status.conf
          - mountPath: /var/log/nginx
            name: nginx-logs
        - env:
          - name: TZ
            value: America/New_York
          image: crazymax/fail2ban:latest
          imagePullPolicy: Always
          name: fail2ban
          resources:
            requests:
              cpu: 1m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/fail2ban/action.d/cloudflare-ban.conf
            name: fail2ban-config-cloudflare
            subPath: cloudflare-ban.conf
          - mountPath: /etc/cloudflare
            name: cloudflare-creds
          - mountPath: /usr/local/bin/fail2ban-cloudflare-ban.sh
            name: ban-script
            subPath: fail2ban-cloudflare-ban.sh
          - mountPath: /etc/fail2ban/fail2ban.conf
            name: fail2ban-main-config
            subPath: fail2ban.conf
          - mountPath: /etc/fail2ban/jail.local
            name: fail2ban-config
            subPath: jail.local
          - mountPath: /etc/fail2ban/filter.d/nginx-404.conf
            name: fail2ban-config
            subPath: nginx-404.conf
          - mountPath: /var/log/nginx
            name: nginx-logs
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /var/log/nginx
            type: DirectoryOrCreate
          name: nginx-logs
        - configMap:
            defaultMode: 420
            name: fail2ban-config
          name: fail2ban-config-cloudflare
        - configMap:
            defaultMode: 493
            name: fail2ban-cloudflare-ban-script
          name: ban-script
        - name: cloudflare-creds
          secret:
            defaultMode: 420
            secretName: cloudflare-creds
        - configMap:
            defaultMode: 420
            name: fail2ban-main-config
          name: fail2ban-main-config
        - configMap:
            defaultMode: 420
            name: nginx-config
          name: config
        - configMap:
            defaultMode: 420
            name: fail2ban-config
          name: fail2ban-config
        - configMap:
            defaultMode: 420
            name: www-configmap
          name: www-volume
        - configMap:
            defaultMode: 420
            name: nginx-config
          name: config-volume
        - hostPath:
            path: /home/huey/www/images
            type: Directory
          name: images-volume
- apiVersion: autoscaling/v2
  kind: HorizontalPodAutoscaler
  metadata:
    labels:
      k8slens-edit-resource-version: v2
    name: nginx-web
    namespace: default
  spec:
    maxReplicas: 10
    metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 69
          type: Utilization
      type: Resource
    minReplicas: 3
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: nginx-web
kind: List
metadata: {}
