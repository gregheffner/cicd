apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    labels:
      controller-revision-hash: 67644c75d5
      name: cleaner-pod
      pod-template-generation: "1"
    name: cleaner-pod-7ntnv
    namespace: prod
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker3
    containers:
    - command:
      - /bin/sh
      - -c
      - |
        while true; do
          now=$(date +%d)
          if [ "$now" = "01" ]; then
            rm -f /host/var/log/nginx/access.log /host/var/log/nginx/error.log
            sleep 86400
          else
            sleep 3600
          fi
        done
      image: busybox
      name: cleanup-pod
      volumeMounts:
      - mountPath: /host/var/log/nginx
        name: host-logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ct97j
        readOnly: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    serviceAccountName: default
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/log/nginx
        type: Directory
      name: host-logs
    - name: kube-api-access-ct97j
      projected:
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    labels:
      controller-revision-hash: 67644c75d5
      name: cleaner-pod
      pod-template-generation: "1"
    name: cleaner-pod-npgsl
    namespace: prod
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker2
    containers:
    - command:
      - /bin/sh
      - -c
      - |
        while true; do
          now=$(date +%d)
          if [ "$now" = "01" ]; then
            rm -f /host/var/log/nginx/access.log /host/var/log/nginx/error.log
            sleep 86400
          else
            sleep 3600
          fi
        done
      image: busybox
      name: cleanup-pod
      volumeMounts:
      - mountPath: /host/var/log/nginx
        name: host-logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ffjcj
        readOnly: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    serviceAccountName: default
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/log/nginx
        type: Directory
      name: host-logs
    - name: kube-api-access-ffjcj
      projected:
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    labels:
      controller-revision-hash: 67644c75d5
      name: cleaner-pod
      pod-template-generation: "1"
    name: cleaner-pod-nt8nf
    namespace: prod
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker1
    containers:
    - command:
      - /bin/sh
      - -c
      - |
        while true; do
          now=$(date +%d)
          if [ "$now" = "01" ]; then
            rm -f /host/var/log/nginx/access.log /host/var/log/nginx/error.log
            sleep 86400
          else
            sleep 3600
          fi
        done
      image: busybox
      name: cleanup-pod
      volumeMounts:
      - mountPath: /host/var/log/nginx
        name: host-logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cj4wz
        readOnly: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    serviceAccountName: default
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/log/nginx
        type: Directory
      name: host-logs
    - name: kube-api-access-cj4wz
      projected:
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.namespace
              path: namespace


- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      ad.datadoghq.com/fail2ban.logs: |
        [
          {
            "source": "fail2ban",
            "service": "nginx-web",
            "type": "file",
            "path": "/var/log/fail2ban.log"
          }
        ]
      ad.datadoghq.com/nginx.checks: |
        {
          "nginx": {
            "init_config": {},
            "instances": [
              {
                "nginx_status_url": "http://%%host%%:81/nginx_status/"
              }
            ]
          }
        }
      ad.datadoghq.com/nginx.logs: |
        [
          {
            "source": "nginx",
            "service": "nginx-web",
            "type": "file",
            "path": "/var/log/nginx/access.log"
          }
        ]
      kubectl.kubernetes.io/restartedAt: "2025-05-22T18:02:39-04:00"
    labels:
      app: nginx-web
      pod-template-hash: 7f97754dd
    name: nginx-web-7f97754dd-42jlh
    namespace: prod
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: node-role.kubernetes.io/control-plane
              operator: DoesNotExist
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app: nginx-web
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - env:
      - name: DEPLOY_DATE
        value: Fri May 24 01:22:17 PM EDT 2024
      - name: STAKATER_WWW_CONFIGMAP_CONFIGMAP
        value: c1a627beae5dca1bb899251e31a22aba5e780b17
      - name: STAKATER_NGINX_CONFIG_CONFIGMAP
        value: f08151630a688fb09bc94d87d4dc9ec8a4b3aa72
      image: technotuba/nginx:v2025.5.10
      name: nginx
      ports:
      - containerPort: 80
      - containerPort: 81
      resources:
        requests:
          cpu: 100m
      volumeMounts:
      - mountPath: /etc/fail2ban/action.d/cloudflare-ban.conf
        name: fail2ban-config-cloudflare
        subPath: cloudflare-ban.conf
      - mountPath: /usr/share/nginx/html
        name: www-volume
      - mountPath: /etc/nginx/nginx.conf
        name: config-volume
        subPath: nginx.conf
      - mountPath: /usr/share/nginx/html/image
        name: images-volume
      - mountPath: /etc/nginx/conf.d/status.conf
        name: config
        readOnly: true
        subPath: status.conf
      - mountPath: /var/log/nginx
        name: nginx-logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7tfgb
        readOnly: true
    - env:
      - name: TZ
        value: America/New_York
      image: crazymax/fail2ban:latest
      name: fail2ban
      resources:
        requests:
          cpu: 1m
      securityContext:
        privileged: true
      volumeMounts:
      - mountPath: /etc/fail2ban/action.d/cloudflare-ban.conf
        name: fail2ban-config-cloudflare
        subPath: cloudflare-ban.conf
      - mountPath: /etc/cloudflare
        name: cloudflare-creds
      - mountPath: /usr/local/bin/fail2ban-cloudflare-ban.sh
        name: ban-script
        subPath: fail2ban-cloudflare-ban.sh
      - mountPath: /etc/fail2ban/fail2ban.conf
        name: fail2ban-main-config
        subPath: fail2ban.conf
      - mountPath: /etc/fail2ban/jail.local
        name: fail2ban-config
        subPath: jail.local
      - mountPath: /etc/fail2ban/filter.d/nginx-404.conf
        name: fail2ban-config
        subPath: nginx-404.conf
      - mountPath: /var/log/nginx
        name: nginx-logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7tfgb
        readOnly: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    serviceAccountName: default
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/log/nginx
        type: DirectoryOrCreate
      name: nginx-logs
    - configMap:
        name: fail2ban-config
      name: fail2ban-config-cloudflare
    - configMap:
        defaultMode: 493
        name: fail2ban-cloudflare-ban-script
      name: ban-script
    - name: cloudflare-creds
      secret:
        secretName: cloudflare-creds
    - configMap:
        name: fail2ban-main-config
      name: fail2ban-main-config
    - configMap:
        name: nginx-config
      name: config
    - configMap:
        name: fail2ban-config
      name: fail2ban-config
    - configMap:
        name: www-configmap
      name: www-volume
    - configMap:
        name: nginx-config
      name: config-volume
    - hostPath:
        path: /home/huey/www/images
        type: Directory
      name: images-volume
    - name: kube-api-access-7tfgb
      projected:
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      ad.datadoghq.com/fail2ban.logs: |
        [
          {
            "source": "fail2ban",
            "service": "nginx-web",
            "type": "file",
            "path": "/var/log/fail2ban.log"
          }
        ]
      ad.datadoghq.com/nginx.checks: |
        {
          "nginx": {
            "init_config": {},
            "instances": [
              {
                "nginx_status_url": "http://%%host%%:81/nginx_status/"
              }
            ]
          }
        }
      ad.datadoghq.com/nginx.logs: |
        [
          {
            "source": "nginx",
            "service": "nginx-web",
            "type": "file",
            "path": "/var/log/nginx/access.log"
          }
        ]
      kubectl.kubernetes.io/restartedAt: "2025-05-22T18:02:39-04:00"
    labels:
      app: nginx-web
      pod-template-hash: 7f97754dd
    name: nginx-web-7f97754dd-fj4gv
    namespace: prod
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: node-role.kubernetes.io/control-plane
              operator: DoesNotExist
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app: nginx-web
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - env:
      - name: DEPLOY_DATE
        value: Fri May 24 01:22:17 PM EDT 2024
      - name: STAKATER_WWW_CONFIGMAP_CONFIGMAP
        value: c1a627beae5dca1bb899251e31a22aba5e780b17
      - name: STAKATER_NGINX_CONFIG_CONFIGMAP
        value: f08151630a688fb09bc94d87d4dc9ec8a4b3aa72
      image: technotuba/nginx:v2025.5.10
      name: nginx
      ports:
      - containerPort: 80
      - containerPort: 81
      resources:
        requests:
          cpu: 100m
      volumeMounts:
      - mountPath: /etc/fail2ban/action.d/cloudflare-ban.conf
        name: fail2ban-config-cloudflare
        subPath: cloudflare-ban.conf
      - mountPath: /usr/share/nginx/html
        name: www-volume
      - mountPath: /etc/nginx/nginx.conf
        name: config-volume
        subPath: nginx.conf
      - mountPath: /usr/share/nginx/html/image
        name: images-volume
      - mountPath: /etc/nginx/conf.d/status.conf
        name: config
        readOnly: true
        subPath: status.conf
      - mountPath: /var/log/nginx
        name: nginx-logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dsrww
        readOnly: true
    - env:
      - name: TZ
        value: America/New_York
      image: crazymax/fail2ban:latest
      name: fail2ban
      resources:
        requests:
          cpu: 1m
      securityContext:
        privileged: true
      volumeMounts:
      - mountPath: /etc/fail2ban/action.d/cloudflare-ban.conf
        name: fail2ban-config-cloudflare
        subPath: cloudflare-ban.conf
      - mountPath: /etc/cloudflare
        name: cloudflare-creds
      - mountPath: /usr/local/bin/fail2ban-cloudflare-ban.sh
        name: ban-script
        subPath: fail2ban-cloudflare-ban.sh
      - mountPath: /etc/fail2ban/fail2ban.conf
        name: fail2ban-main-config
        subPath: fail2ban.conf
      - mountPath: /etc/fail2ban/jail.local
        name: fail2ban-config
        subPath: jail.local
      - mountPath: /etc/fail2ban/filter.d/nginx-404.conf
        name: fail2ban-config
        subPath: nginx-404.conf
      - mountPath: /var/log/nginx
        name: nginx-logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dsrww
        readOnly: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    serviceAccountName: default
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/log/nginx
        type: DirectoryOrCreate
      name: nginx-logs
    - configMap:
        name: fail2ban-config
      name: fail2ban-config-cloudflare
    - configMap:
        defaultMode: 493
        name: fail2ban-cloudflare-ban-script
      name: ban-script
    - name: cloudflare-creds
      secret:
        secretName: cloudflare-creds
    - configMap:
        name: fail2ban-main-config
      name: fail2ban-main-config
    - configMap:
        name: nginx-config
      name: config
    - configMap:
        name: fail2ban-config
      name: fail2ban-config
    - configMap:
        name: www-configmap
      name: www-volume
    - configMap:
        name: nginx-config
      name: config-volume
    - hostPath:
        path: /home/huey/www/images
        type: Directory
      name: images-volume
    - name: kube-api-access-dsrww
      projected:
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      ad.datadoghq.com/fail2ban.logs: |
        [
          {
            "source": "fail2ban",
            "service": "nginx-web",
            "type": "file",
            "path": "/var/log/fail2ban.log"
          }
        ]
      ad.datadoghq.com/nginx.checks: |
        {
          "nginx": {
            "init_config": {},
            "instances": [
              {
                "nginx_status_url": "http://%%host%%:81/nginx_status/"
              }
            ]
          }
        }
      ad.datadoghq.com/nginx.logs: |
        [
          {
            "source": "nginx",
            "service": "nginx-web",
            "type": "file",
            "path": "/var/log/nginx/access.log"
          }
        ]
      kubectl.kubernetes.io/restartedAt: "2025-05-22T18:02:39-04:00"
    labels:
      app: nginx-web
      pod-template-hash: 7f97754dd
    name: nginx-web-7f97754dd-ld7mz
    namespace: prod
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: node-role.kubernetes.io/control-plane
              operator: DoesNotExist
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app: nginx-web
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - env:
      - name: DEPLOY_DATE
        value: Fri May 24 01:22:17 PM EDT 2024
      - name: STAKATER_WWW_CONFIGMAP_CONFIGMAP
        value: c1a627beae5dca1bb899251e31a22aba5e780b17
      - name: STAKATER_NGINX_CONFIG_CONFIGMAP
        value: f08151630a688fb09bc94d87d4dc9ec8a4b3aa72
      image: technotuba/nginx:v2025.5.10
      name: nginx
      ports:
      - containerPort: 80
      - containerPort: 81
      resources:
        requests:
          cpu: 100m
      volumeMounts:
      - mountPath: /etc/fail2ban/action.d/cloudflare-ban.conf
        name: fail2ban-config-cloudflare
        subPath: cloudflare-ban.conf
      - mountPath: /usr/share/nginx/html
        name: www-volume
      - mountPath: /etc/nginx/nginx.conf
        name: config-volume
        subPath: nginx.conf
      - mountPath: /usr/share/nginx/html/image
        name: images-volume
      - mountPath: /etc/nginx/conf.d/status.conf
        name: config
        readOnly: true
        subPath: status.conf
      - mountPath: /var/log/nginx
        name: nginx-logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-t87mb
        readOnly: true
    - env:
      - name: TZ
        value: America/New_York
      image: crazymax/fail2ban:latest
      name: fail2ban
      resources:
        requests:
          cpu: 1m
      securityContext:
        privileged: true
      volumeMounts:
      - mountPath: /etc/fail2ban/action.d/cloudflare-ban.conf
        name: fail2ban-config-cloudflare
        subPath: cloudflare-ban.conf
      - mountPath: /etc/cloudflare
        name: cloudflare-creds
      - mountPath: /usr/local/bin/fail2ban-cloudflare-ban.sh
        name: ban-script
        subPath: fail2ban-cloudflare-ban.sh
      - mountPath: /etc/fail2ban/fail2ban.conf
        name: fail2ban-main-config
        subPath: fail2ban.conf
      - mountPath: /etc/fail2ban/jail.local
        name: fail2ban-config
        subPath: jail.local
      - mountPath: /etc/fail2ban/filter.d/nginx-404.conf
        name: fail2ban-config
        subPath: nginx-404.conf
      - mountPath: /var/log/nginx
        name: nginx-logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-t87mb
        readOnly: true
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    serviceAccountName: default
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/log/nginx
        type: DirectoryOrCreate
      name: nginx-logs
    - configMap:
        name: fail2ban-config
      name: fail2ban-config-cloudflare
    - configMap:
        defaultMode: 493
        name: fail2ban-cloudflare-ban-script
      name: ban-script
    - name: cloudflare-creds
      secret:
        secretName: cloudflare-creds
    - configMap:
        name: fail2ban-main-config
      name: fail2ban-main-config
    - configMap:
        name: nginx-config
      name: config
    - configMap:
        name: fail2ban-config
      name: fail2ban-config
    - configMap:
        name: www-configmap
      name: www-volume
    - configMap:
        name: nginx-config
      name: config-volume
    - hostPath:
        path: /home/huey/www/images
        type: Directory
      name: images-volume
    - name: kube-api-access-t87mb
      projected:
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                fieldPath: metadata.namespace
              path: namespace

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: prod
  spec:
    clusterIP: 10.96.0.1
    clusterIPs:
    - 10.96.0.1
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      targetPort: 6443

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: nginx-web
      k8slens-edit-resource-version: v1
    name: nginx-service
    namespace: prod
  spec:
    clusterIP: 10.100.221.5
    clusterIPs:
    - 10.100.221.5
    externalTrafficPolicy: Local
    healthCheckNodePort: 31887
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      nodePort: 32535
      port: 80
    - name: nginx-status
      nodePort: 30727
      port: 81
    selector:
      app: nginx-web
    type: LoadBalancer

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: prometheus-operator
      app.kubernetes.io/version: v0.38.3
    name: prometheus-operator
    namespace: prod
  spec:
    clusterIP: None
    clusterIPs:
    - None
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8080
      targetPort: http
    selector:
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: prometheus-operator
      
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    name: cleaner-pod
    namespace: prod
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        name: cleaner-pod
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: cleaner-pod
      spec:
        containers:
        - command:
          - /bin/sh
          - -c
          - |
            while true; do
              now=$(date +%d)
              if [ "$now" = "01" ]; then
                rm -f /host/var/log/nginx/access.log /host/var/log/nginx/error.log
                sleep 86400
              else
                sleep 3600
              fi
            done
          image: busybox
          imagePullPolicy: Always
          name: cleanup-pod
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/var/log/nginx
            name: host-logs
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /var/log/nginx
            type: Directory
          name: host-logs
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate


- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "43"
      internal.dd.datadoghq.com/fail2ban.detected_langs: python
    labels:
      app: nginx-web
      k8slens-edit-resource-version: v1
    name: nginx-web
    namespace: prod
  spec:
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: nginx-web
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          ad.datadoghq.com/fail2ban.logs: |
            [
              {
                "source": "fail2ban",
                "service": "nginx-web",
                "type": "file",
                "path": "/var/log/fail2ban.log"
              }
            ]
          ad.datadoghq.com/nginx.checks: |
            {
              "nginx": {
                "init_config": {},
                "instances": [
                  {
                    "nginx_status_url": "http://%%host%%:81/nginx_status/"
                  }
                ]
              }
            }
          ad.datadoghq.com/nginx.logs: |
            [
              {
                "source": "nginx",
                "service": "nginx-web",
                "type": "file",
                "path": "/var/log/nginx/access.log"
              }
            ]
          kubectl.kubernetes.io/restartedAt: "2025-05-22T18:02:39-04:00"
        creationTimestamp: null
        labels:
          app: nginx-web
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: node-role.kubernetes.io/control-plane
                  operator: DoesNotExist
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: nginx-web
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - env:
          - name: DEPLOY_DATE
            value: Fri May 24 01:22:17 PM EDT 2024
          - name: STAKATER_WWW_CONFIGMAP_CONFIGMAP
            value: c1a627beae5dca1bb899251e31a22aba5e780b17
          - name: STAKATER_NGINX_CONFIG_CONFIGMAP
            value: f08151630a688fb09bc94d87d4dc9ec8a4b3aa72
          image: technotuba/nginx:v2025.5.10
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          - containerPort: 81
            protocol: TCP
          resources:
            requests:
              cpu: 100m
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/fail2ban/action.d/cloudflare-ban.conf
            name: fail2ban-config-cloudflare
            subPath: cloudflare-ban.conf
          - mountPath: /usr/share/nginx/html
            name: www-volume
          - mountPath: /etc/nginx/nginx.conf
            name: config-volume
            subPath: nginx.conf
          - mountPath: /usr/share/nginx/html/image
            name: images-volume
          - mountPath: /etc/nginx/conf.d/status.conf
            name: config
            readOnly: true
            subPath: status.conf
          - mountPath: /var/log/nginx
            name: nginx-logs
        - env:
          - name: TZ
            value: America/New_York
          image: crazymax/fail2ban:latest
          imagePullPolicy: Always
          name: fail2ban
          resources:
            requests:
              cpu: 1m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/fail2ban/action.d/cloudflare-ban.conf
            name: fail2ban-config-cloudflare
            subPath: cloudflare-ban.conf
          - mountPath: /etc/cloudflare
            name: cloudflare-creds
          - mountPath: /usr/local/bin/fail2ban-cloudflare-ban.sh
            name: ban-script
            subPath: fail2ban-cloudflare-ban.sh
          - mountPath: /etc/fail2ban/fail2ban.conf
            name: fail2ban-main-config
            subPath: fail2ban.conf
          - mountPath: /etc/fail2ban/jail.local
            name: fail2ban-config
            subPath: jail.local
          - mountPath: /etc/fail2ban/filter.d/nginx-404.conf
            name: fail2ban-config
            subPath: nginx-404.conf
          - mountPath: /var/log/nginx
            name: nginx-logs
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /var/log/nginx
            type: DirectoryOrCreate
          name: nginx-logs
        - configMap:
            defaultMode: 420
            name: fail2ban-config
          name: fail2ban-config-cloudflare
        - configMap:
            defaultMode: 493
            name: fail2ban-cloudflare-ban-script
          name: ban-script
        - name: cloudflare-creds
          secret:
            defaultMode: 420
            secretName: cloudflare-creds
        - configMap:
            defaultMode: 420
            name: fail2ban-main-config
          name: fail2ban-main-config
        - configMap:
            defaultMode: 420
            name: nginx-config
          name: config
        - configMap:
            defaultMode: 420
            name: fail2ban-config
          name: fail2ban-config
        - configMap:
            defaultMode: 420
            name: www-configmap
          name: www-volume
        - configMap:
            defaultMode: 420
            name: nginx-config
          name: config-volume
        - hostPath:
            path: /home/huey/www/images
            type: Directory
          name: images-volume
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "43"
      internal.dd.datadoghq.com/fail2ban.detected_langs: python
    labels:
      app: nginx-web
      pod-template-hash: 7f97754dd
    name: nginx-web-7f97754dd
    namespace: prod
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: nginx-web
        pod-template-hash: 7f97754dd
    template:
      metadata:
        annotations:
          ad.datadoghq.com/fail2ban.logs: |
            [
              {
                "source": "fail2ban",
                "service": "nginx-web",
                "type": "file",
                "path": "/var/log/fail2ban.log"
              }
            ]
          ad.datadoghq.com/nginx.checks: |
            {
              "nginx": {
                "init_config": {},
                "instances": [
                  {
                    "nginx_status_url": "http://%%host%%:81/nginx_status/"
                  }
                ]
              }
            }
          ad.datadoghq.com/nginx.logs: |
            [
              {
                "source": "nginx",
                "service": "nginx-web",
                "type": "file",
                "path": "/var/log/nginx/access.log"
              }
            ]
          kubectl.kubernetes.io/restartedAt: "2025-05-22T18:02:39-04:00"
        creationTimestamp: null
        labels:
          app: nginx-web
          pod-template-hash: 7f97754dd
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: node-role.kubernetes.io/control-plane
                  operator: DoesNotExist
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: nginx-web
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - env:
          - name: DEPLOY_DATE
            value: Fri May 24 01:22:17 PM EDT 2024
          - name: STAKATER_WWW_CONFIGMAP_CONFIGMAP
            value: c1a627beae5dca1bb899251e31a22aba5e780b17
          - name: STAKATER_NGINX_CONFIG_CONFIGMAP
            value: f08151630a688fb09bc94d87d4dc9ec8a4b3aa72
          image: technotuba/nginx:v2025.5.10
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          - containerPort: 81
            protocol: TCP
          resources:
            requests:
              cpu: 100m
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/fail2ban/action.d/cloudflare-ban.conf
            name: fail2ban-config-cloudflare
            subPath: cloudflare-ban.conf
          - mountPath: /usr/share/nginx/html
            name: www-volume
          - mountPath: /etc/nginx/nginx.conf
            name: config-volume
            subPath: nginx.conf
          - mountPath: /usr/share/nginx/html/image
            name: images-volume
          - mountPath: /etc/nginx/conf.d/status.conf
            name: config
            readOnly: true
            subPath: status.conf
          - mountPath: /var/log/nginx
            name: nginx-logs
        - env:
          - name: TZ
            value: America/New_York
          image: crazymax/fail2ban:latest
          imagePullPolicy: Always
          name: fail2ban
          resources:
            requests:
              cpu: 1m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/fail2ban/action.d/cloudflare-ban.conf
            name: fail2ban-config-cloudflare
            subPath: cloudflare-ban.conf
          - mountPath: /etc/cloudflare
            name: cloudflare-creds
          - mountPath: /usr/local/bin/fail2ban-cloudflare-ban.sh
            name: ban-script
            subPath: fail2ban-cloudflare-ban.sh
          - mountPath: /etc/fail2ban/fail2ban.conf
            name: fail2ban-main-config
            subPath: fail2ban.conf
          - mountPath: /etc/fail2ban/jail.local
            name: fail2ban-config
            subPath: jail.local
          - mountPath: /etc/fail2ban/filter.d/nginx-404.conf
            name: fail2ban-config
            subPath: nginx-404.conf
          - mountPath: /var/log/nginx
            name: nginx-logs
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /var/log/nginx
            type: DirectoryOrCreate
          name: nginx-logs
        - configMap:
            defaultMode: 420
            name: fail2ban-config
          name: fail2ban-config-cloudflare
        - configMap:
            defaultMode: 493
            name: fail2ban-cloudflare-ban-script
          name: ban-script
        - name: cloudflare-creds
          secret:
            defaultMode: 420
            secretName: cloudflare-creds
        - configMap:
            defaultMode: 420
            name: fail2ban-main-config
          name: fail2ban-main-config
        - configMap:
            defaultMode: 420
            name: nginx-config
          name: config
        - configMap:
            defaultMode: 420
            name: fail2ban-config
          name: fail2ban-config
        - configMap:
            defaultMode: 420
            name: www-configmap
          name: www-volume
        - configMap:
            defaultMode: 420
            name: nginx-config
          name: config-volume
        - hostPath:
            path: /home/huey/www/images
            type: Directory
          name: images-volume
- apiVersion: autoscaling/v2
  kind: HorizontalPodAutoscaler
  metadata:
    labels:
      k8slens-edit-resource-version: v2
    name: nginx-web
    namespace: prod
  spec:
    maxReplicas: 10
    metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 69
          type: Utilization
      type: Resource
    minReplicas: 3
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: nginx-web
kind: List
metadata: {}
